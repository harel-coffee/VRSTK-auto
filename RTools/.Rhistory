"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(tempDataFrame)
View(rawTrackingData)
View(tempDataFrame)
#splittedBandPowerValues[2]
if (length(splittedBandPowerValues) == 1)
#out1 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")
#[[1]]
#splittedBandPowerValues[2]
if (length(splittedBandPowerValues) == 1)
{
splittedBandPowerValues <- splittedBandPowerValues[[1]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(tempDataFrame)
View(rawEmotivTrackingDataStage0)
#out1 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")
#[[1]]
#splittedBandPowerValues[2]
if (length(splittedBandPowerValues) == 1)
{
splittedBandPowerValues <- splittedBandPowerValues[[1]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(tempDataFrame)
View(tempDataFrame)
warnings()
#out1 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
#splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")
#[[1]]
#splittedBandPowerValues[2]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
#out1 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
#splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")
#[[1]]
#splittedBandPowerValues[2]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(tempDataFrame)
#out1 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
#splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")
#[[1]]
#splittedBandPowerValues[2]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(tempDataFrame)
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(str_replace(splittedBandPowerValues[2], ",", "."))), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
#out1 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
#splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")
#[[1]]
#splittedBandPowerValues[2]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(stringr::str_replace(splittedBandPowerValues[2], ",", "."))), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(tempDataFrame)
#out1 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
#splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")
#[[1]]
#splittedBandPowerValues[2]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
splittedBandPowerValues <- stringr::str_replace(splittedBandPowerValues, ",", ".")
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(tempDataFrame)
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
splittedBandPowerValues <- stringr::str_replace(splittedBandPowerValues, ",", ".")
rawBandPowerDataFrameStage0[nrow(rawBandPowerDataFrameStage0) + 1,] <- c("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])))
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
#                          "F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
#                          "F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
#                          "FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
#                          "T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
#                          "P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
#                          "O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
#                          "O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
#                          "P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
#                          "T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
#                          "FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
#                          "F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
#                          "F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
#                          "AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(rawBandPowerDataFrameStage0)
rawBandPowerDataFrameStage0 <- data.frame("time" = c(as.numeric(0.0)), "AF3/theta" = c(as.numeric(0.0)), "AF3/alpha" = c(as.numeric(0.0)), "AF3/betaL" = c(as.numeric(0.0)), "AF3/betaH" = c(as.numeric(0.0)), "AF3/gamma" = c(as.numeric(0.0)),
"F7/theta" = c(as.numeric(0.0)), "F7/alpha" = c(as.numeric(0.0)),"F7/betaL" = c(as.numeric(0.0)),"F7/betaH" = c(as.numeric(0.0)),"F7/gamma" = c(as.numeric(0.0)),
"F3/theta" = c(as.numeric(0.0)), "F3/alpha" = c(as.numeric(0.0)),"F3/betaL" = c(as.numeric(0.0)),"F3/betaH" = c(as.numeric(0.0)),"F3/gamma" = c(as.numeric(0.0)),
"FC5/theta" = c(as.numeric(0.0)),"FC5/alpha" = c(as.numeric(0.0)),"FC5/betaL" = c(as.numeric(0.0)),"FC5/betaH" = c(as.numeric(0.0)),"FC5/gamma" = c(as.numeric(0.0)),
"T7/theta" = c(as.numeric(0.0)), "T7/alpha" = c(as.numeric(0.0)),"T7/betaL" = c(as.numeric(0.0)),"T7/betaH" = c(as.numeric(0.0)),"T7/gamma" = c(as.numeric(0.0)),
"P7/theta" = c(as.numeric(0.0)), "P7/alpha" = c(as.numeric(0.0)),"P7/betaL" = c(as.numeric(0.0)),"P7/betaH" = c(as.numeric(0.0)),"P7/gamma" = c(as.numeric(0.0)),
"O1/theta" = c(as.numeric(0.0)), "O1/alpha" = c(as.numeric(0.0)),"O1/betaL" = c(as.numeric(0.0)),"O1/betaH" = c(as.numeric(0.0)),"O1/gamma" = c(as.numeric(0.0)),
"O2/theta" = c(as.numeric(0.0)), "O2/alpha" = c(as.numeric(0.0)),"O2/betaL" = c(as.numeric(0.0)),"O2/betaH" = c(as.numeric(0.0)),"O2/gamma" = c(as.numeric(0.0)),
"P8/theta" = c(as.numeric(0.0)), "P8/alpha" = c(as.numeric(0.0)),"P8/betaL" = c(as.numeric(0.0)),"P8/betaH" = c(as.numeric(0.0)),"P8/gamma" = c(as.numeric(0.0)),
"T8/theta" = c(as.numeric(0.0)), "T8/alpha" = c(as.numeric(0.0)),"T8/betaL" = c(as.numeric(0.0)),"T8/betaH" = c(as.numeric(0.0)),"T8/gamma" = c(as.numeric(0.0)),
"FC6/theta" = c(as.numeric(0.0)),"FC6/alpha" = c(as.numeric(0.0)),"FC6/betaL" = c(as.numeric(0.0)),"FC6/betaH" = c(as.numeric(0.0)),"FC6/gamma" = c(as.numeric(0.0)),
"F4/theta" = c(as.numeric(0.0)), "F4/alpha" = c(as.numeric(0.0)), "F4/betaL" = c(as.numeric(0.0)),"F4/betaH" = c(as.numeric(0.0)),"F4/gamma"= c(as.numeric(0.0)),
"F8/theta" = c(as.numeric(0.0)), "F8/alpha" = c(as.numeric(0.0)), "F8/betaL" = c(as.numeric(0.0)),"F8/betaH" = c(as.numeric(0.0)),"F8/gamma" = c(as.numeric(0.0)),
"AF4/theta" = c(as.numeric(0.0)),"AF4/alpha" = c(as.numeric(0.0)),"AF4/betaL" = c(as.numeric(0.0)),"AF4/betaH" = c(as.numeric(0.0)),"AF4/gamma" = c(as.numeric(0.0)));
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
splittedBandPowerValues <- stringr::str_replace(splittedBandPowerValues, ",", ".")
rawBandPowerDataFrameStage0[nrow(rawBandPowerDataFrameStage0) + 1,] <- c("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])))
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
#                          "F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
#                          "F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
#                          "FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
#                          "T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
#                          "P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
#                          "O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
#                          "O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
#                          "P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
#                          "T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
#                          "FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
#                          "F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
#                          "F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
#                          "AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
View(rawBandPowerDataFrameStage0)
rawBandPowerDataFrameStage0 <- data.frame("time" = c(as.numeric(0.0)), "AF3/theta" = c(as.numeric(0.0)), "AF3/alpha" = c(as.numeric(0.0)), "AF3/betaL" = c(as.numeric(0.0)), "AF3/betaH" = c(as.numeric(0.0)), "AF3/gamma" = c(as.numeric(0.0)),
"F7/theta" = c(as.numeric(0.0)), "F7/alpha" = c(as.numeric(0.0)),"F7/betaL" = c(as.numeric(0.0)),"F7/betaH" = c(as.numeric(0.0)),"F7/gamma" = c(as.numeric(0.0)),
"F3/theta" = c(as.numeric(0.0)), "F3/alpha" = c(as.numeric(0.0)),"F3/betaL" = c(as.numeric(0.0)),"F3/betaH" = c(as.numeric(0.0)),"F3/gamma" = c(as.numeric(0.0)),
"FC5/theta" = c(as.numeric(0.0)),"FC5/alpha" = c(as.numeric(0.0)),"FC5/betaL" = c(as.numeric(0.0)),"FC5/betaH" = c(as.numeric(0.0)),"FC5/gamma" = c(as.numeric(0.0)),
"T7/theta" = c(as.numeric(0.0)), "T7/alpha" = c(as.numeric(0.0)),"T7/betaL" = c(as.numeric(0.0)),"T7/betaH" = c(as.numeric(0.0)),"T7/gamma" = c(as.numeric(0.0)),
"P7/theta" = c(as.numeric(0.0)), "P7/alpha" = c(as.numeric(0.0)),"P7/betaL" = c(as.numeric(0.0)),"P7/betaH" = c(as.numeric(0.0)),"P7/gamma" = c(as.numeric(0.0)),
"O1/theta" = c(as.numeric(0.0)), "O1/alpha" = c(as.numeric(0.0)),"O1/betaL" = c(as.numeric(0.0)),"O1/betaH" = c(as.numeric(0.0)),"O1/gamma" = c(as.numeric(0.0)),
"O2/theta" = c(as.numeric(0.0)), "O2/alpha" = c(as.numeric(0.0)),"O2/betaL" = c(as.numeric(0.0)),"O2/betaH" = c(as.numeric(0.0)),"O2/gamma" = c(as.numeric(0.0)),
"P8/theta" = c(as.numeric(0.0)), "P8/alpha" = c(as.numeric(0.0)),"P8/betaL" = c(as.numeric(0.0)),"P8/betaH" = c(as.numeric(0.0)),"P8/gamma" = c(as.numeric(0.0)),
"T8/theta" = c(as.numeric(0.0)), "T8/alpha" = c(as.numeric(0.0)),"T8/betaL" = c(as.numeric(0.0)),"T8/betaH" = c(as.numeric(0.0)),"T8/gamma" = c(as.numeric(0.0)),
"FC6/theta" = c(as.numeric(0.0)),"FC6/alpha" = c(as.numeric(0.0)),"FC6/betaL" = c(as.numeric(0.0)),"FC6/betaH" = c(as.numeric(0.0)),"FC6/gamma" = c(as.numeric(0.0)),
"F4/theta" = c(as.numeric(0.0)), "F4/alpha" = c(as.numeric(0.0)), "F4/betaL" = c(as.numeric(0.0)),"F4/betaH" = c(as.numeric(0.0)),"F4/gamma"= c(as.numeric(0.0)),
"F8/theta" = c(as.numeric(0.0)), "F8/alpha" = c(as.numeric(0.0)), "F8/betaL" = c(as.numeric(0.0)),"F8/betaH" = c(as.numeric(0.0)),"F8/gamma" = c(as.numeric(0.0)),
"AF4/theta" = c(as.numeric(0.0)),"AF4/alpha" = c(as.numeric(0.0)),"AF4/betaL" = c(as.numeric(0.0)),"AF4/betaH" = c(as.numeric(0.0)),"AF4/gamma" = c(as.numeric(0.0)));
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
splittedBandPowerValues <- stringr::str_replace(splittedBandPowerValues, ",", ".")
rawBandPowerDataFrameStage0[nrow(rawBandPowerDataFrameStage0) + 1,] <- c(as.numeric(rowTimeValue), as.numeric(splittedBandPowerValues[2]), as.numeric(splittedBandPowerValues[3]), as.numeric(splittedBandPowerValues[4]), as.numeric(splittedBandPowerValues[5]), as.numeric(splittedBandPowerValues[6]),
as.numeric(splittedBandPowerValues[7]),  as.numeric(splittedBandPowerValues[8]),  as.numeric(splittedBandPowerValues[9]),  as.numeric(splittedBandPowerValues[10]), as.numeric(splittedBandPowerValues[11]),
as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[13]), as.numeric(splittedBandPowerValues[14]), as.numeric(splittedBandPowerValues[15]), as.numeric(splittedBandPowerValues[16]),
as.numeric(splittedBandPowerValues[17]), as.numeric(splittedBandPowerValues[18]), as.numeric(splittedBandPowerValues[19]), as.numeric(splittedBandPowerValues[20]), as.numeric(splittedBandPowerValues[21]),
as.numeric(splittedBandPowerValues[22]), as.numeric(splittedBandPowerValues[23]), as.numeric(splittedBandPowerValues[24]), as.numeric(splittedBandPowerValues[25]), as.numeric(splittedBandPowerValues[26]),
as.numeric(splittedBandPowerValues[27]), as.numeric(splittedBandPowerValues[28]), as.numeric(splittedBandPowerValues[29]), as.numeric(splittedBandPowerValues[30]), as.numeric(splittedBandPowerValues[31]),
as.numeric(splittedBandPowerValues[32]), as.numeric(splittedBandPowerValues[33]), as.numeric(splittedBandPowerValues[34]), as.numeric(splittedBandPowerValues[35]), as.numeric(splittedBandPowerValues[36]),
as.numeric(splittedBandPowerValues[37]), as.numeric(splittedBandPowerValues[38]), as.numeric(splittedBandPowerValues[39]), as.numeric(splittedBandPowerValues[40]), as.numeric(splittedBandPowerValues[41]),
as.numeric(splittedBandPowerValues[42]), as.numeric(splittedBandPowerValues[43]), as.numeric(splittedBandPowerValues[44]), as.numeric(splittedBandPowerValues[45]), as.numeric(splittedBandPowerValues[46]),
as.numeric(splittedBandPowerValues[47]), as.numeric(splittedBandPowerValues[48]), as.numeric(splittedBandPowerValues[49]), as.numeric(splittedBandPowerValues[50]), as.numeric(splittedBandPowerValues[51]),
as.numeric(splittedBandPowerValues[52]), as.numeric(splittedBandPowerValues[53]), as.numeric(splittedBandPowerValues[54]), as.numeric(splittedBandPowerValues[55]), as.numeric(splittedBandPowerValues[56]),
as.numeric(splittedBandPowerValues[57]), as.numeric(splittedBandPowerValues[58]), as.numeric(splittedBandPowerValues[59]), as.numeric(splittedBandPowerValues[60]), as.numeric(splittedBandPowerValues[61]),
as.numeric(splittedBandPowerValues[62]), as.numeric(splittedBandPowerValues[63]), as.numeric(splittedBandPowerValues[64]), as.numeric(splittedBandPowerValues[65]), as.numeric(splittedBandPowerValues[66]),
as.numeric(splittedBandPowerValues[67]), as.numeric(splittedBandPowerValues[68]), as.numeric(splittedBandPowerValues[69]), as.numeric(splittedBandPowerValues[70]), as.numeric(splittedBandPowerValues[71]))
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
#                          "F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
#                          "F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
#                          "FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
#                          "T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
#                          "P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
#                          "O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
#                          "O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
#                          "P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
#                          "T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
#                          "FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
#                          "F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
#                          "F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
#                          "AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
}
}
rawBandPowerDataFrameStage0 <- data.frame("time" = c(as.numeric(0.0)), "AF3/theta" = c(as.numeric(0.0)), "AF3/alpha" = c(as.numeric(0.0)), "AF3/betaL" = c(as.numeric(0.0)), "AF3/betaH" = c(as.numeric(0.0)), "AF3/gamma" = c(as.numeric(0.0)),
"F7/theta" = c(as.numeric(0.0)), "F7/alpha" = c(as.numeric(0.0)),"F7/betaL" = c(as.numeric(0.0)),"F7/betaH" = c(as.numeric(0.0)),"F7/gamma" = c(as.numeric(0.0)),
"F3/theta" = c(as.numeric(0.0)), "F3/alpha" = c(as.numeric(0.0)),"F3/betaL" = c(as.numeric(0.0)),"F3/betaH" = c(as.numeric(0.0)),"F3/gamma" = c(as.numeric(0.0)),
"FC5/theta" = c(as.numeric(0.0)),"FC5/alpha" = c(as.numeric(0.0)),"FC5/betaL" = c(as.numeric(0.0)),"FC5/betaH" = c(as.numeric(0.0)),"FC5/gamma" = c(as.numeric(0.0)),
"T7/theta" = c(as.numeric(0.0)), "T7/alpha" = c(as.numeric(0.0)),"T7/betaL" = c(as.numeric(0.0)),"T7/betaH" = c(as.numeric(0.0)),"T7/gamma" = c(as.numeric(0.0)),
"P7/theta" = c(as.numeric(0.0)), "P7/alpha" = c(as.numeric(0.0)),"P7/betaL" = c(as.numeric(0.0)),"P7/betaH" = c(as.numeric(0.0)),"P7/gamma" = c(as.numeric(0.0)),
"O1/theta" = c(as.numeric(0.0)), "O1/alpha" = c(as.numeric(0.0)),"O1/betaL" = c(as.numeric(0.0)),"O1/betaH" = c(as.numeric(0.0)),"O1/gamma" = c(as.numeric(0.0)),
"O2/theta" = c(as.numeric(0.0)), "O2/alpha" = c(as.numeric(0.0)),"O2/betaL" = c(as.numeric(0.0)),"O2/betaH" = c(as.numeric(0.0)),"O2/gamma" = c(as.numeric(0.0)),
"P8/theta" = c(as.numeric(0.0)), "P8/alpha" = c(as.numeric(0.0)),"P8/betaL" = c(as.numeric(0.0)),"P8/betaH" = c(as.numeric(0.0)),"P8/gamma" = c(as.numeric(0.0)),
"T8/theta" = c(as.numeric(0.0)), "T8/alpha" = c(as.numeric(0.0)),"T8/betaL" = c(as.numeric(0.0)),"T8/betaH" = c(as.numeric(0.0)),"T8/gamma" = c(as.numeric(0.0)),
"FC6/theta" = c(as.numeric(0.0)),"FC6/alpha" = c(as.numeric(0.0)),"FC6/betaL" = c(as.numeric(0.0)),"FC6/betaH" = c(as.numeric(0.0)),"FC6/gamma" = c(as.numeric(0.0)),
"F4/theta" = c(as.numeric(0.0)), "F4/alpha" = c(as.numeric(0.0)), "F4/betaL" = c(as.numeric(0.0)),"F4/betaH" = c(as.numeric(0.0)),"F4/gamma"= c(as.numeric(0.0)),
"F8/theta" = c(as.numeric(0.0)), "F8/alpha" = c(as.numeric(0.0)), "F8/betaL" = c(as.numeric(0.0)),"F8/betaH" = c(as.numeric(0.0)),"F8/gamma" = c(as.numeric(0.0)),
"AF4/theta" = c(as.numeric(0.0)),"AF4/alpha" = c(as.numeric(0.0)),"AF4/betaL" = c(as.numeric(0.0)),"AF4/betaH" = c(as.numeric(0.0)),"AF4/gamma" = c(as.numeric(0.0)));
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
splittedBandPowerValues <- stringr::str_replace(splittedBandPowerValues, ",", ".")
#rawBandPowerDataFrameStage0[nrow(rawBandPowerDataFrameStage0) + 1,] <- c(as.numeric(rowTimeValue), as.numeric(splittedBandPowerValues[2]), as.numeric(splittedBandPowerValues[3]), as.numeric(splittedBandPowerValues[4]), as.numeric(splittedBandPowerValues[5]), as.numeric(splittedBandPowerValues[6]),
#                                                                         as.numeric(splittedBandPowerValues[7]),  as.numeric(splittedBandPowerValues[8]),  as.numeric(splittedBandPowerValues[9]),  as.numeric(splittedBandPowerValues[10]), as.numeric(splittedBandPowerValues[11]),
#                                                                         as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[13]), as.numeric(splittedBandPowerValues[14]), as.numeric(splittedBandPowerValues[15]), as.numeric(splittedBandPowerValues[16]),
#                                                                         as.numeric(splittedBandPowerValues[17]), as.numeric(splittedBandPowerValues[18]), as.numeric(splittedBandPowerValues[19]), as.numeric(splittedBandPowerValues[20]), as.numeric(splittedBandPowerValues[21]),
#                                                                         as.numeric(splittedBandPowerValues[22]), as.numeric(splittedBandPowerValues[23]), as.numeric(splittedBandPowerValues[24]), as.numeric(splittedBandPowerValues[25]), as.numeric(splittedBandPowerValues[26]),
#                                                                         as.numeric(splittedBandPowerValues[27]), as.numeric(splittedBandPowerValues[28]), as.numeric(splittedBandPowerValues[29]), as.numeric(splittedBandPowerValues[30]), as.numeric(splittedBandPowerValues[31]),
#                                                                         as.numeric(splittedBandPowerValues[32]), as.numeric(splittedBandPowerValues[33]), as.numeric(splittedBandPowerValues[34]), as.numeric(splittedBandPowerValues[35]), as.numeric(splittedBandPowerValues[36]),
#                                                                         as.numeric(splittedBandPowerValues[37]), as.numeric(splittedBandPowerValues[38]), as.numeric(splittedBandPowerValues[39]), as.numeric(splittedBandPowerValues[40]), as.numeric(splittedBandPowerValues[41]),
#                                                                         as.numeric(splittedBandPowerValues[42]), as.numeric(splittedBandPowerValues[43]), as.numeric(splittedBandPowerValues[44]), as.numeric(splittedBandPowerValues[45]), as.numeric(splittedBandPowerValues[46]),
#                                                                         as.numeric(splittedBandPowerValues[47]), as.numeric(splittedBandPowerValues[48]), as.numeric(splittedBandPowerValues[49]), as.numeric(splittedBandPowerValues[50]), as.numeric(splittedBandPowerValues[51]),
#                                                                         as.numeric(splittedBandPowerValues[52]), as.numeric(splittedBandPowerValues[53]), as.numeric(splittedBandPowerValues[54]), as.numeric(splittedBandPowerValues[55]), as.numeric(splittedBandPowerValues[56]),
#                                                                         as.numeric(splittedBandPowerValues[57]), as.numeric(splittedBandPowerValues[58]), as.numeric(splittedBandPowerValues[59]), as.numeric(splittedBandPowerValues[60]), as.numeric(splittedBandPowerValues[61]),
#                                                                         as.numeric(splittedBandPowerValues[62]), as.numeric(splittedBandPowerValues[63]), as.numeric(splittedBandPowerValues[64]), as.numeric(splittedBandPowerValues[65]), as.numeric(splittedBandPowerValues[66]),
#                                                                         as.numeric(splittedBandPowerValues[67]), as.numeric(splittedBandPowerValues[68]), as.numeric(splittedBandPowerValues[69]), as.numeric(splittedBandPowerValues[70]), as.numeric(splittedBandPowerValues[71]))
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
rawBandPowerDataFrameStage0 <- rbind(rawBandPowerDataFrameStage0, tempDataFrame)
}
}
View(rawBandPowerDataFrameStage0)
View(tempDataFrame)
rawBandPowerDataFrameStage0 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue))
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
splittedBandPowerValues <- stringr::str_replace(splittedBandPowerValues, ",", ".")
#rawBandPowerDataFrameStage0[nrow(rawBandPowerDataFrameStage0) + 1,] <- c(as.numeric(rowTimeValue), as.numeric(splittedBandPowerValues[2]), as.numeric(splittedBandPowerValues[3]), as.numeric(splittedBandPowerValues[4]), as.numeric(splittedBandPowerValues[5]), as.numeric(splittedBandPowerValues[6]),
#                                                                         as.numeric(splittedBandPowerValues[7]),  as.numeric(splittedBandPowerValues[8]),  as.numeric(splittedBandPowerValues[9]),  as.numeric(splittedBandPowerValues[10]), as.numeric(splittedBandPowerValues[11]),
#                                                                         as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[13]), as.numeric(splittedBandPowerValues[14]), as.numeric(splittedBandPowerValues[15]), as.numeric(splittedBandPowerValues[16]),
#                                                                         as.numeric(splittedBandPowerValues[17]), as.numeric(splittedBandPowerValues[18]), as.numeric(splittedBandPowerValues[19]), as.numeric(splittedBandPowerValues[20]), as.numeric(splittedBandPowerValues[21]),
#                                                                         as.numeric(splittedBandPowerValues[22]), as.numeric(splittedBandPowerValues[23]), as.numeric(splittedBandPowerValues[24]), as.numeric(splittedBandPowerValues[25]), as.numeric(splittedBandPowerValues[26]),
#                                                                         as.numeric(splittedBandPowerValues[27]), as.numeric(splittedBandPowerValues[28]), as.numeric(splittedBandPowerValues[29]), as.numeric(splittedBandPowerValues[30]), as.numeric(splittedBandPowerValues[31]),
#                                                                         as.numeric(splittedBandPowerValues[32]), as.numeric(splittedBandPowerValues[33]), as.numeric(splittedBandPowerValues[34]), as.numeric(splittedBandPowerValues[35]), as.numeric(splittedBandPowerValues[36]),
#                                                                         as.numeric(splittedBandPowerValues[37]), as.numeric(splittedBandPowerValues[38]), as.numeric(splittedBandPowerValues[39]), as.numeric(splittedBandPowerValues[40]), as.numeric(splittedBandPowerValues[41]),
#                                                                         as.numeric(splittedBandPowerValues[42]), as.numeric(splittedBandPowerValues[43]), as.numeric(splittedBandPowerValues[44]), as.numeric(splittedBandPowerValues[45]), as.numeric(splittedBandPowerValues[46]),
#                                                                         as.numeric(splittedBandPowerValues[47]), as.numeric(splittedBandPowerValues[48]), as.numeric(splittedBandPowerValues[49]), as.numeric(splittedBandPowerValues[50]), as.numeric(splittedBandPowerValues[51]),
#                                                                         as.numeric(splittedBandPowerValues[52]), as.numeric(splittedBandPowerValues[53]), as.numeric(splittedBandPowerValues[54]), as.numeric(splittedBandPowerValues[55]), as.numeric(splittedBandPowerValues[56]),
#                                                                         as.numeric(splittedBandPowerValues[57]), as.numeric(splittedBandPowerValues[58]), as.numeric(splittedBandPowerValues[59]), as.numeric(splittedBandPowerValues[60]), as.numeric(splittedBandPowerValues[61]),
#                                                                         as.numeric(splittedBandPowerValues[62]), as.numeric(splittedBandPowerValues[63]), as.numeric(splittedBandPowerValues[64]), as.numeric(splittedBandPowerValues[65]), as.numeric(splittedBandPowerValues[66]),
#                                                                         as.numeric(splittedBandPowerValues[67]), as.numeric(splittedBandPowerValues[68]), as.numeric(splittedBandPowerValues[69]), as.numeric(splittedBandPowerValues[70]), as.numeric(splittedBandPowerValues[71]))
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
if (is.null(rawBandPowerDataFrameStage0))
{
rawBandPowerDataFrameStage0 <- tempDataFrame
}
else
{
rawBandPowerDataFrameStage0 <- rbind(rawBandPowerDataFrameStage0, tempDataFrame)
}
}
}
View(rawBandPowerDataFrameStage0)
View(tempDataFrame)
rawBandPowerDataFrameStage0 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rowBandPowerValue <- rawEmotivTrackingDataStage0$BandPowerDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rowBandPowerValue) && !is.na(rowBandPowerValue) && !is.nan(rowBandPowerValue) && length(rowBandPowerValue) && rowBandPowerValue != "")
{
splittedBandPowerValues <- stringr::str_split(rowBandPowerValue, ";")[[1]]
splittedBandPowerValues <- stringr::str_replace(splittedBandPowerValues, ",", ".")
#rawBandPowerDataFrameStage0[nrow(rawBandPowerDataFrameStage0) + 1,] <- c(as.numeric(rowTimeValue), as.numeric(splittedBandPowerValues[2]), as.numeric(splittedBandPowerValues[3]), as.numeric(splittedBandPowerValues[4]), as.numeric(splittedBandPowerValues[5]), as.numeric(splittedBandPowerValues[6]),
#                                                                         as.numeric(splittedBandPowerValues[7]),  as.numeric(splittedBandPowerValues[8]),  as.numeric(splittedBandPowerValues[9]),  as.numeric(splittedBandPowerValues[10]), as.numeric(splittedBandPowerValues[11]),
#                                                                         as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[13]), as.numeric(splittedBandPowerValues[14]), as.numeric(splittedBandPowerValues[15]), as.numeric(splittedBandPowerValues[16]),
#                                                                         as.numeric(splittedBandPowerValues[17]), as.numeric(splittedBandPowerValues[18]), as.numeric(splittedBandPowerValues[19]), as.numeric(splittedBandPowerValues[20]), as.numeric(splittedBandPowerValues[21]),
#                                                                         as.numeric(splittedBandPowerValues[22]), as.numeric(splittedBandPowerValues[23]), as.numeric(splittedBandPowerValues[24]), as.numeric(splittedBandPowerValues[25]), as.numeric(splittedBandPowerValues[26]),
#                                                                         as.numeric(splittedBandPowerValues[27]), as.numeric(splittedBandPowerValues[28]), as.numeric(splittedBandPowerValues[29]), as.numeric(splittedBandPowerValues[30]), as.numeric(splittedBandPowerValues[31]),
#                                                                         as.numeric(splittedBandPowerValues[32]), as.numeric(splittedBandPowerValues[33]), as.numeric(splittedBandPowerValues[34]), as.numeric(splittedBandPowerValues[35]), as.numeric(splittedBandPowerValues[36]),
#                                                                         as.numeric(splittedBandPowerValues[37]), as.numeric(splittedBandPowerValues[38]), as.numeric(splittedBandPowerValues[39]), as.numeric(splittedBandPowerValues[40]), as.numeric(splittedBandPowerValues[41]),
#                                                                         as.numeric(splittedBandPowerValues[42]), as.numeric(splittedBandPowerValues[43]), as.numeric(splittedBandPowerValues[44]), as.numeric(splittedBandPowerValues[45]), as.numeric(splittedBandPowerValues[46]),
#                                                                         as.numeric(splittedBandPowerValues[47]), as.numeric(splittedBandPowerValues[48]), as.numeric(splittedBandPowerValues[49]), as.numeric(splittedBandPowerValues[50]), as.numeric(splittedBandPowerValues[51]),
#                                                                         as.numeric(splittedBandPowerValues[52]), as.numeric(splittedBandPowerValues[53]), as.numeric(splittedBandPowerValues[54]), as.numeric(splittedBandPowerValues[55]), as.numeric(splittedBandPowerValues[56]),
#                                                                         as.numeric(splittedBandPowerValues[57]), as.numeric(splittedBandPowerValues[58]), as.numeric(splittedBandPowerValues[59]), as.numeric(splittedBandPowerValues[60]), as.numeric(splittedBandPowerValues[61]),
#                                                                         as.numeric(splittedBandPowerValues[62]), as.numeric(splittedBandPowerValues[63]), as.numeric(splittedBandPowerValues[64]), as.numeric(splittedBandPowerValues[65]), as.numeric(splittedBandPowerValues[66]),
#                                                                         as.numeric(splittedBandPowerValues[67]), as.numeric(splittedBandPowerValues[68]), as.numeric(splittedBandPowerValues[69]), as.numeric(splittedBandPowerValues[70]), as.numeric(splittedBandPowerValues[71]))
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "AF3/theta" = c(as.numeric(splittedBandPowerValues[2])), "AF3/alpha" = c(as.numeric(splittedBandPowerValues[3])), "AF3/betaL" = c(as.numeric(splittedBandPowerValues[4])), "AF3/betaH" = c(as.numeric(splittedBandPowerValues[5])), "AF3/gamma" = c(as.numeric(splittedBandPowerValues[6])),
"F7/theta" = c(as.numeric(splittedBandPowerValues[7])), "F7/alpha" = c(as.numeric(splittedBandPowerValues[8])),"F7/betaL" = c(as.numeric(splittedBandPowerValues[9])),"F7/betaH" = c(as.numeric(splittedBandPowerValues[10])),"F7/gamma" = c(as.numeric(splittedBandPowerValues[11])),
"F3/theta" = c(as.numeric(splittedBandPowerValues[12])), "F3/alpha" = c(as.numeric(splittedBandPowerValues[13])),"F3/betaL" = c(as.numeric(splittedBandPowerValues[14])),"F3/betaH" = c(as.numeric(splittedBandPowerValues[15])),"F3/gamma" = c(as.numeric(splittedBandPowerValues[16])),
"FC5/theta" = c(as.numeric(splittedBandPowerValues[17])),"FC5/alpha" = c(as.numeric(splittedBandPowerValues[18])),"FC5/betaL" = c(as.numeric(splittedBandPowerValues[19])),"FC5/betaH" = c(as.numeric(splittedBandPowerValues[20])),"FC5/gamma" = c(as.numeric(splittedBandPowerValues[21])),
"T7/theta" = c(as.numeric(splittedBandPowerValues[22])), "T7/alpha" = c(as.numeric(splittedBandPowerValues[23])),"T7/betaL" = c(as.numeric(splittedBandPowerValues[24])),"T7/betaH" = c(as.numeric(splittedBandPowerValues[25])),"T7/gamma" = c(as.numeric(splittedBandPowerValues[26])),
"P7/theta" = c(as.numeric(splittedBandPowerValues[27])), "P7/alpha" = c(as.numeric(splittedBandPowerValues[28])),"P7/betaL" = c(as.numeric(splittedBandPowerValues[29])),"P7/betaH" = c(as.numeric(splittedBandPowerValues[30])),"P7/gamma" = c(as.numeric(splittedBandPowerValues[31])),
"O1/theta" = c(as.numeric(splittedBandPowerValues[32])), "O1/alpha" = c(as.numeric(splittedBandPowerValues[33])),"O1/betaL" = c(as.numeric(splittedBandPowerValues[34])),"O1/betaH" = c(as.numeric(splittedBandPowerValues[35])),"O1/gamma" = c(as.numeric(splittedBandPowerValues[36])),
"O2/theta" = c(as.numeric(splittedBandPowerValues[37])), "O2/alpha" = c(as.numeric(splittedBandPowerValues[38])),"O2/betaL" = c(as.numeric(splittedBandPowerValues[39])),"O2/betaH" = c(as.numeric(splittedBandPowerValues[40])),"O2/gamma" = c(as.numeric(splittedBandPowerValues[41])),
"P8/theta" = c(as.numeric(splittedBandPowerValues[42])), "P8/alpha" = c(as.numeric(splittedBandPowerValues[43])),"P8/betaL" = c(as.numeric(splittedBandPowerValues[44])),"P8/betaH" = c(as.numeric(splittedBandPowerValues[45])),"P8/gamma" = c(as.numeric(splittedBandPowerValues[46])),
"T8/theta" = c(as.numeric(splittedBandPowerValues[47])), "T8/alpha" = c(as.numeric(splittedBandPowerValues[48])),"T8/betaL" = c(as.numeric(splittedBandPowerValues[49])),"T8/betaH" = c(as.numeric(splittedBandPowerValues[50])),"T8/gamma" = c(as.numeric(splittedBandPowerValues[51])),
"FC6/theta" = c(as.numeric(splittedBandPowerValues[52])),"FC6/alpha" = c(as.numeric(splittedBandPowerValues[53])),"FC6/betaL" = c(as.numeric(splittedBandPowerValues[54])),"FC6/betaH" = c(as.numeric(splittedBandPowerValues[55])),"FC6/gamma" = c(as.numeric(splittedBandPowerValues[56])),
"F4/theta" = c(as.numeric(splittedBandPowerValues[57])), "F4/alpha" = c(as.numeric(splittedBandPowerValues[58])),"F4/betaL" = c(as.numeric(splittedBandPowerValues[59])),"F4/betaH" = c(as.numeric(splittedBandPowerValues[60])),"F4/gamma" = c(as.numeric(splittedBandPowerValues[61])),
"F8/theta" = c(as.numeric(splittedBandPowerValues[62])), "F8/alpha" = c(as.numeric(splittedBandPowerValues[63])),"F8/betaL" = c(as.numeric(splittedBandPowerValues[64])),"F8/betaH" = c(as.numeric(splittedBandPowerValues[65])),"F8/gamma" = c(as.numeric(splittedBandPowerValues[66])),
"AF4/theta" = c(as.numeric(splittedBandPowerValues[67])),"AF4/alpha" = c(as.numeric(splittedBandPowerValues[68])),"AF4/betaL" = c(as.numeric(splittedBandPowerValues[69])),"AF4/betaH" = c(as.numeric(splittedBandPowerValues[70])),"AF4/gamma" = c(as.numeric(splittedBandPowerValues[71])));
if (is.null(rawBandPowerDataFrameStage0))
{
rawBandPowerDataFrameStage0 <- tempDataFrame
}
else
{
rawBandPowerDataFrameStage0 <- rbind(rawBandPowerDataFrameStage0, tempDataFrame)
}
}
}
View(rawBandPowerDataFrameStage0)
