for(stage in c("Stage0","Stage1", "Stage2")){
dataframe_name <- paste("participent_", cid, "_", stage, "_DataFrame", sep="")
remove(list=c(dataframe_name))
}
}
rm(c_index)
rm(lastRow)
rm(file_name_csv)
rm(dataframe_name)
rm(file_name_txt)
rm(file_name)
rm(pagesTIMESUMs_name)
rm(stage)
rm(participent_variable_name)
rm(path)
rm(pathCSV)
rm(pathTXT)
rm(i)
rm(id)
rm(id_)
rm(leftDifference)
rm(leftMeanPupilDiameter)
rm(numberOfRows)
rm(rightDifference)
rm(rightMeanPupilDiameter)
rm(tempColumn)
rm(cid)
}
pagesTIMESUMsStage1CA <- read.csv2(file = './Condition A/RResults/PagesTIMESUMsStage1_DataFrame.csv')
pagesTIMESUMsStage1CB <- read.csv2(file = './Condition B/RResults/PagesTIMESUMsStage1_DataFrame.csv')
pagesTIMESUMsStage1CC <- read.csv2(file = './Condition C/RResults/PagesTIMESUMsStage1_DataFrame.csv')
allpagesTIMESUMsStage1 <- pagesTIMESUMsStage1CA
allpagesTIMESUMsStage1 <- rbind(allpagesTIMESUMsStage1, pagesTIMESUMsStage1CB)
allpagesTIMESUMsStage1 <- rbind(allpagesTIMESUMsStage1, pagesTIMESUMsStage1CC)
# stage 1 calc
medianTimeRsi <- 0
allpagesTIMESUMsStage1$GlobalTIMERSICalc <- 0
allpagesTIMESUMsStage1$GlobalMEDIANForTRSI <- 0
allpagesTIMESUMsStage1$EvaluatedGlobalTIMERSICalc <- 0
medianTimeRsi <- median(allpagesTIMESUMsStage1$TIME_SUM)
for(i in 1:nrow(allpagesTIMESUMsStage1)){
allpagesTIMESUMsStage1$GlobalTIMERSICalc[i] <- medianTimeRsi / allpagesTIMESUMsStage1$TIME_SUM[i]
}
allpagesTIMESUMsStage1$GlobalMEDIANForTRSI <- medianTimeRsi
for(i in 1:nrow(allpagesTIMESUMsStage1)){
if(allpagesTIMESUMsStage1$GlobalTIMERSICalc[i] < 1){
allpagesTIMESUMsStage1$EvaluatedGlobalTIMERSICalc[i] <- 0
}
if(allpagesTIMESUMsStage1$GlobalTIMERSICalc[i] >= 1){
allpagesTIMESUMsStage1$EvaluatedGlobalTIMERSICalc[i] <- 1
}
if(allpagesTIMESUMsStage1$GlobalTIMERSICalc[i] >= 2){
allpagesTIMESUMsStage1$EvaluatedGlobalTIMERSICalc[i] <- 2
}
}
pagesTIMESUMsStage1CA$GlobalTIMERSICalc <- 0
pagesTIMESUMsStage1CA$GlobalMEDIANForTRSI <- 0
pagesTIMESUMsStage1CA$EvaluatedGlobalTIMERSICalc <- 0
pagesTIMESUMsStage1CB$GlobalTIMERSICalc <- 0
pagesTIMESUMsStage1CB$GlobalMEDIANForTRSI <- 0
pagesTIMESUMsStage1CB$EvaluatedGlobalTIMERSICalc <- 0
pagesTIMESUMsStage1CC$GlobalTIMERSICalc <- 0
pagesTIMESUMsStage1CC$GlobalMEDIANForTRSI <- 0
pagesTIMESUMsStage1CC$EvaluatedGlobalTIMERSICalc <- 0
countCa <- nrow(pagesTIMESUMsStage1CA)
countCB <- nrow(pagesTIMESUMsStage1CA) + nrow(pagesTIMESUMsStage1CB)
countCC <- nrow(allpagesTIMESUMsStage1)
for(i in 1:nrow(allpagesTIMESUMsStage1)){
if(i <= countCa){
pagesTIMESUMsStage1CA$GlobalTIMERSICalc[i] <- allpagesTIMESUMsStage1$GlobalTIMERSICalc[i]
pagesTIMESUMsStage1CA$EvaluatedGlobalTIMERSICalc[i] <- allpagesTIMESUMsStage1$EvaluatedGlobalTIMERSICalc[i]
pagesTIMESUMsStage1CA$GlobalMEDIANForTRSI[i] <- allpagesTIMESUMsStage1$GlobalMEDIANForTRSI[i]
}else if(i <= countCB){
pagesTIMESUMsStage1CB$GlobalTIMERSICalc[i - countCa] <- allpagesTIMESUMsStage1$GlobalTIMERSICalc[i]
pagesTIMESUMsStage1CB$EvaluatedGlobalTIMERSICalc[i - countCa] <- allpagesTIMESUMsStage1$EvaluatedGlobalTIMERSICalc[i]
pagesTIMESUMsStage1CB$GlobalMEDIANForTRSI[i - countCa] <- allpagesTIMESUMsStage1$GlobalMEDIANForTRSI[i]
}else if(i <= countCC){
pagesTIMESUMsStage1CC$GlobalTIMERSICalc[i - countCB] <- allpagesTIMESUMsStage1$GlobalTIMERSICalc[i]
pagesTIMESUMsStage1CC$EvaluatedGlobalTIMERSICalc[i - countCB] <- allpagesTIMESUMsStage1$EvaluatedGlobalTIMERSICalc[i]
pagesTIMESUMsStage1CC$GlobalMEDIANForTRSI[i- countCB] <- allpagesTIMESUMsStage1$GlobalMEDIANForTRSI[i]
}
}
pathCSV <- './Condition A/RResults/PagesTIMESUMsStage1_DataFrame.csv'
pathTXT <- './Condition A/RResults/PagesTIMESUMsStage1_DataFrame.txt'
write.csv2(pagesTIMESUMsStage1CA, pathCSV, row.names = FALSE)
write.table(pagesTIMESUMsStage1CA, pathTXT, sep=" # ", row.names=FALSE)
pathCSV <- './Condition B/RResults/PagesTIMESUMsStage1_DataFrame.csv'
pathTXT <- './Condition B/RResults/PagesTIMESUMsStage1_DataFrame.txt'
write.csv2(pagesTIMESUMsStage1CB, pathCSV, row.names = FALSE)
write.table(pagesTIMESUMsStage1CB, pathTXT, sep=" # ", row.names=FALSE)
pathCSV <- './Condition C/RResults/PagesTIMESUMsStage1_DataFrame.csv'
pathTXT <- './Condition C/RResults/PagesTIMESUMsStage1_DataFrame.txt'
write.csv2(pagesTIMESUMsStage1CC, pathCSV, row.names = FALSE)
write.table(pagesTIMESUMsStage1CC, pathTXT, sep=" # ", row.names=FALSE)
for (condition in c("Condition A", "Condition B", "Condition C")){
condition_list <- NULL
if (str_detect(condition, "Condition A")){
condition_list <- c("id-1", "id-2", "id-3", "id-4", "id-5", "id-6", "id-7", "id-10")
} else if (str_detect(condition, "Condition B")){
condition_list <- c("id-13", "id-14", "id-15", "id-16", "id-17b", "id-18", "id-19", "id-20", "id-31", "id-34")
} else if (str_detect(condition, "Condition C")){
condition_list <- c("id-21", "id-22", "id-23", "id-24", "id-25", "id-26", "id-27", "id-28", "id-29")
}
path <- file.path(condition,  "RResults", "/")
c_index <- 1
tempDataFrame <- NULL
all_participent_dataframe <- NULL
for (cid in condition_list){
for(stage in c("Stage1")){
dataframe_name <- paste("participent_", cid, "_", stage, "_DataFrame", sep="")
file_name_csv <- paste(dataframe_name, ".csv", sep="")
pathCSV <- file.path(path,  file_name_csv, "")
tempDataFrame <- read.csv2(file = pathCSV)
pagesTIMESUMs <- NULL
if(str_detect(condition, "Condition A")){
pagesTIMESUMs <- pagesTIMESUMsStage1CA
}
if(str_detect(condition, "Condition B")){
pagesTIMESUMs <- pagesTIMESUMsStage1CB
}
if(str_detect(condition, "Condition C")){
pagesTIMESUMs <- pagesTIMESUMsStage1CB
}
tempDataFrame$GlobalTIMERSICalc          <- pagesTIMESUMs$GlobalTIMERSICalc[c_index]
tempDataFrame$EvaluatedGlobalTIMERSICalc <- pagesTIMESUMs$EvaluatedGlobalTIMERSICalc[c_index]
tempDataFrame$GlobalMEDIANForTRSI        <- pagesTIMESUMs$GlobalMEDIANForTRSI[c_index]
}
file_name_csv <- paste(dataframe_name, ".csv", sep="")
file_name_txt <- paste(dataframe_name, ".txt", sep="")
pathCSV <- file.path(path,  file_name_csv, "")
pathTXT <- file.path(path,  file_name_txt, "")
write.csv2(tempDataFrame, pathCSV, row.names = FALSE)
write.table(tempDataFrame, pathTXT, sep=" # ", row.names=FALSE)
if (is.null(all_participent_dataframe)){
all_participent_dataframe <- tempDataFrame
} else {
all_participent_dataframe <- rbind(all_participent_dataframe, tempDataFrame)
}
c_index <- c_index + 1
}
path <- file.path(condition,  "RResults", "/")
file_name <- paste("All_Participents_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path(path, file_name, "")
write.csv2(all_participent_dataframe, pathCSV, row.names = FALSE)
file_name <- paste("All_Participents_", stage, "_DataFrame.txt", sep="")
pathTXT <- file.path(path, file_name, "")
write.table(all_participent_dataframe, pathTXT, sep=" # ", row.names=FALSE)
}
for(stage in c("Stage0","Stage1", "Stage2")){
# load files
file_name <- paste("All_Participents_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path("./Condition A/RResults/", file_name, "")
conditionADataFrame <- read.csv2(file = pathCSV)
file_name <- paste("All_Participents_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path("./Condition B/RResults/", file_name, "")
conditionBDataFrame <- read.csv2(file = pathCSV)
file_name <- paste("All_Participents_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path("./Condition C/RResults/", file_name, "")
conditionCDataFrame <- read.csv2(file = pathCSV)
# fuse all 3 conditions
all_participent_dataframe <- conditionADataFrame
all_participent_dataframe <- rbind(all_participent_dataframe, conditionBDataFrame)
all_participent_dataframe <- rbind(all_participent_dataframe, conditionCDataFrame)
# create a copy of fused dataframe
temp_dataframe <- all_participent_dataframe
# all cells with "NA" = 0
#temp_dataframe <- replace(temp_dataframe, is.na(temp_dataframe), 0)
# all rows with "NA" to cut out
temp_dataframe <- na.omit(temp_dataframe)
# clean ids -> only numbers
temp_dataframe$pId <- str_replace(temp_dataframe$pId, "id-", "")
temp_dataframe$pId <- str_replace(temp_dataframe$pId, "b", "")
# switch time and id
numberOfColumns <- ncol(temp_dataframe)
temp_dataframe <- temp_dataframe[, c(2,1,3:numberOfColumns)]
# filter: remove unused/bad/const_to_zero/strings  columns
temp_dataframe <- subset(temp_dataframe, select=-c(lex))
if (stage != "Stage0"){
temp_dataframe <- subset(temp_dataframe, select=-c(STARTED, LASTDATA, MAXPAGE, DegTimeThreshold, DegTimeThresholdForOnePage, DegTimeValueForOnePage)) # MAXPAGE is optional
}
# convert all columns to numeric
numberOfColumns <- ncol(temp_dataframe)
temp_dataframe[,1:numberOfColumns] <- lapply(temp_dataframe[,1:numberOfColumns], function (x) as.numeric(x))
# save file
file_name <- paste("All_Participents_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path("./", file_name, "")
write.csv2(temp_dataframe, pathCSV, row.names = FALSE)
# clean up
rm(all_participent_dataframe)
rm(conditionADataFrame)
rm(conditionBDataFrame)
rm(conditionCDataFrame)
rm(temp_dataframe)
rm(list)
}
for (condition in c("Condition A", "Condition B", "Condition C")){
condition_list <- NULL
if (str_detect(condition, "Condition A")){
# Conditions Ids:
# A -> id-1, id-2, id-3, id-4, id-5, id-6, id-7, id-10, (id-42 eeg-quality 0%) => 8 (9) Participents
condition_list <- c("id-1", "id-2", "id-3", "id-4", "id-5", "id-6", "id-7", "id-10")
} else if (str_detect(condition, "Condition B")){
# B -> id-13, id-14, id-15, id-16, id-17b, id-18, id-19, id-20, id-31, id-34, (id-25) 0 => optional participent because subjective it was a none-conscientious
condition_list <- c("id-13", "id-14", "id-15", "id-16", "id-17b", "id-18", "id-19", "id-20", "id-31", "id-34")
#condition_list <- c("id-13", "id-17b", "id-18", "id-19", "id-20", "id-31", "id-34")
} else if (str_detect(condition, "Condition C")){
# C -> id-21, id-22, id-22, id-23, id-24, id-25, id-26, id-27, id-28, id-29
condition_list <- c("id-21", "id-22", "id-23", "id-24", "id-25", "id-26", "id-27", "id-28", "id-29")
}
condition_length <- length(condition_list)
path <- file.path(condition,  "RResults", "/")
for(stage in c("Stage0","Stage1", "Stage2")){
All_Participents_Mean_DataFrame <- NULL
for (cid in condition_list){
dataframe_name <- paste("participent_", cid, "_", stage, "_DataFrame", sep="")
file_name <- paste (dataframe_name, ".csv", sep="")
pathCSV <- file.path(path,  file_name, "")
temp_dataframe <- read.csv2(file = pathCSV)
# alls cells with "NA" = 0
#temp_dataframe <- replace(temp_dataframe, is.na(temp_dataframe), 0)
# all rows with "NA" to cut out
temp_dataframe <- na.omit(temp_dataframe)
# clean ids -> only numbers
temp_dataframe$pId <- str_replace(temp_dataframe$pId, "id-", "")
temp_dataframe$pId <- str_replace(temp_dataframe$pId, "b", "")
# switch time and id
numberOfColumns <- ncol(temp_dataframe)
temp_dataframe <- temp_dataframe[, c(2,1,3:numberOfColumns)] # leave the row index blank to keep all rows
# filter: remove unused/bad/const_to_zero/strings  columns
temp_dataframe <- subset(temp_dataframe, select=-c(lex))
if (stage != "Stage0"){
temp_dataframe <- subset(temp_dataframe, select=-c(STARTED, LASTDATA, MAXPAGE, DegTimeThreshold, DegTimeThresholdForOnePage, DegTimeValueForOnePage)) # MAXPAGE is optional
}
# convert all columns to numeric
numberOfColumns <- ncol(temp_dataframe)
temp_dataframe[,1:numberOfColumns] <- lapply(temp_dataframe[,1:numberOfColumns], function (x) as.numeric(x))
meanArray <- colMeans(temp_dataframe)
temp_df <- data.frame(matrix(0, ncol = length(meanArray), nrow = 0))
temp_df <- rbind(temp_df, meanArray)
colnames(temp_df) <- colnames(temp_dataframe)
if(is.null(All_Participents_Mean_DataFrame)){
All_Participents_Mean_DataFrame <- temp_df
}else{
All_Participents_Mean_DataFrame <- rbind(All_Participents_Mean_DataFrame, temp_df)
}
}
file_name <- paste ("All_Participents_Mean_", stage, "_DataFrame.csv", sep="")
path_file <- file.path(path,  file_name, "")
write.csv2(All_Participents_Mean_DataFrame, path_file, row.names = FALSE)
}
}
for(stage in c("Stage0","Stage1", "Stage2")){
# load files
file_name <- paste("All_Participents_Mean_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path("./Condition A/RResults/", file_name, "")
conditionAMeanDataFrame <- read.csv2(file = pathCSV)
file_name <- paste("All_Participents_Mean_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path("./Condition B/RResults/", file_name, "")
conditionBMeanDataFrame <- read.csv2(file = pathCSV)
file_name <- paste("All_Participents_Mean_", stage, "_DataFrame.csv", sep="")
pathCSV <- file.path("./Condition C/RResults/", file_name, "")
conditionCMeanDataFrame <- read.csv2(file = pathCSV)
# fuse data frames
all_participent_Mean_dataframes <- conditionAMeanDataFrame
all_participent_Mean_dataframes <- rbind(all_participent_Mean_dataframes, conditionBMeanDataFrame)
all_participent_Mean_dataframes <- rbind(all_participent_Mean_dataframes, conditionCMeanDataFrame)
# save fused data frame
file_name <- paste("All_Participents_Mean_", stage, "_DataFrame.csv", sep="")
write.csv2(all_participent_Mean_dataframes, file_name, row.names = FALSE)
}
rm(all_participent_Mean_dataframes)
rm(All_Participents_Mean_DataFrame)
rm(conditionAMeanDataFrame)
rm(conditionBMeanDataFrame)
rm(conditionCMeanDataFrame)
rm(temp_dataframe)
rm(temp_df)
rm(cid)
rm(condition)
rm(condition_length)
rm(condition_list)
rm(dataframe_name)
rm(file_name)
rm(meanArray)
rm(path)
rm(path_file)
rm(numberOfColumns)
rm(pathCSV)
rm(stage)
# 14.3 create diff data frame from stage1 mean with stage0 mean data frame
# load files
file_name <- paste("All_Participents_Mean_Stage0_DataFrame.csv", sep="")
meanStage0DataFrame <- read.csv2(file = file_name)
file_name <- paste("All_Participents_Mean_Stage1_DataFrame.csv", sep="")
meanStage1DataFrame <- read.csv2(file = file_name)
cnames <- colnames(meanStage0DataFrame[,3:ncol(meanStage0DataFrame)])
allcnames <- colnames(meanStage1DataFrame)
desired_length = length(allcnames) - length(cnames)
filtertcnames <- vector(mode = "list", length = desired_length)
filtertcnames <- NULL
index <- 1
for (name in allcnames){
if(!(name %in% cnames)){
filtertcnames[index] <- name
index <- index + 1
}
}
temp_df <- meanStage1DataFrame[, cnames] - meanStage0DataFrame[, cnames]
temp_df <- cbind(meanStage1DataFrame[, filtertcnames], temp_df)
file_name <- paste("All_Participents_Mean_Diff_Of_Stages_DataFrame.csv", sep="")
write.csv2(temp_df, file_name, row.names = FALSE)
# 14.4 last cleanup stage
rm(allpagesTIMESUMsStage1)
rm(eyeTrackingSaccadesInformationStage1)
rm(meanStage0DataFrame)
rm(meanStage1DataFrame)
rm(pagesTIMESUMs)
rm(pagesTIMESUMsStage1CA)
rm(pagesTIMESUMsStage1CB)
rm(pagesTIMESUMsStage1CC)
rm(rawEyeTrackingSaccadesPositionsInformationStage1)
rm(rawFixationSaccadesPositionsDataStage1)
rm(temp_df)
rm(tempDataFrame)
rm(allcnames)
rm(c_index)
rm(countCa)
rm(countCB)
rm(countCC)
rm(file_name)
rm(file_name_csv)
rm(file_name_txt)
rm(filtertcnames)
rm(i)
rm(index)
rm(indexQ1)
rm(indexQ2)
rm(indexQ3)
rm(name)
rm(oldPageIndex)
rm(cnames)
rm(desired_length)
rm(pathTXT)
rm(medianTimeRsi)
rm(rawEyeTrackingSaccadesPositionsInformationStage1Temp)
rm(rawSaccadsPositionsInformationsAsMessage)
rm(replacedSaccade_0_Values)
rm(replacedSaccade_1_Values)
rm(q1XSaccads)
rm(q2XSaccads)
rm(q3XSaccads)
rm(rowModelName)
rm(rowModelNameIndex)
rm(saccade_0_position)
rm(saccade_1_position)
rm(splittedSaccadsPositionsInformations)
# using packages
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(broom)
library(AICcmodavg)
library(Hmisc)
library(car)
library(ggstatsplot)
# custom function to implement min max scaling
minMax <- function(x) {
if((max(x) - min(x)) == 0) {
x <- 0
}else{
(x - min(x)) / (max(x) - min(x))
}
}
#### conscientious
# ===================================
# manuell clustert (0 = conscientious, 1 = none-conscientious)
# =======
# read csv file as data frame
allConscientiousFeaturesTrackedFromStage1 <- read.csv2(file = './Condition A/RResults/All_Participents_Stage1_DataFrame.csv')
allNoneConscientiousFeaturesTrackedFromStage1 <- read.csv2(file = './Condition B/RResults/All_Participents_Stage1_DataFrame.csv')
allNoneFeaturesTrackedFromStage1 <- read.csv2(file = './Condition C/RResults/All_Participents_Stage1_DataFrame.csv')
allFeaturesTrackedFromStage1 <- read.csv2(file = 'All_Participents_Stage1_DataFrame.csv')
allMeanFeaturesTrackedFromStage1 <- read.csv2(file = 'All_Participents_Mean_Stage1_DataFrame.csv')
# Condition A
temp <- allConscientiousFeaturesTrackedFromStage1
#================= 1 ============== 2 ============== 3 ============== 4 ============== 5 ============= 6 ============ 7 ============= 8 ============ 9 ============== 10 ============ 11 ============= 12 ============ 13 ============ 14 =====
temp$theta <- temp$AF3.theta + temp$F7.theta + temp$F3.theta + temp$FC5.theta + temp$T7.theta + temp$P7.theta + temp$O1.theta + temp$O2.theta + temp$P8.theta + temp$T8.theta + temp$AF4.theta + temp$F8.theta + temp$F4.theta + temp$FC6.theta
temp$alpha <- temp$AF3.alpha + temp$F7.alpha + temp$F3.alpha + temp$FC5.alpha + temp$T7.alpha + temp$P7.alpha + temp$O1.alpha + temp$O2.alpha + temp$P8.alpha + temp$T8.alpha + temp$AF4.alpha + temp$F8.alpha + temp$F4.alpha + temp$FC6.alpha
temp$betaL <- temp$AF3.betaL + temp$F7.betaL + temp$F3.betaL + temp$FC5.betaL + temp$T7.betaL + temp$P7.betaL + temp$O1.betaL + temp$O2.betaL + temp$P8.betaL + temp$T8.betaL + temp$AF4.betaL + temp$F8.betaL + temp$F4.betaL + temp$FC6.betaL
temp$betaH <- temp$AF3.betaH + temp$F7.betaH + temp$F3.betaH + temp$FC5.betaH + temp$T7.betaH + temp$P7.betaH + temp$O1.betaH + temp$O2.betaH + temp$P8.betaH + temp$T8.betaH + temp$AF4.betaH + temp$F8.betaH + temp$F4.betaH + temp$FC6.betaH
temp$gamma <- temp$AF3.gamma + temp$F7.gamma + temp$F3.gamma + temp$FC5.gamma + temp$T7.gamma + temp$P7.gamma + temp$O1.gamma + temp$O2.gamma + temp$P8.gamma + temp$T8.gamma + temp$AF4.gamma + temp$F8.gamma + temp$F4.gamma + temp$FC6.gamma
# eeg band power column number = 70 and begin with 10
allConscientiousFeaturesTrackedFromStage1 <- temp
columnConscientiousCounter <- ncol(allConscientiousFeaturesTrackedFromStage1)
barplot(colSums(allConscientiousFeaturesTrackedFromStage1[,(34):103]))
barplot(colSums(allConscientiousFeaturesTrackedFromStage1[,(columnConscientiousCounter - 4):columnConscientiousCounter]))
barplot(colSums(allConscientiousFeaturesTrackedFromStage1[,(columnConscientiousCounter - 2):columnConscientiousCounter]))
# Condition B
temp <- allNoneConscientiousFeaturesTrackedFromStage1
temp$theta <- temp$AF3.theta + temp$F7.theta + temp$F3.theta + temp$FC5.theta + temp$T7.theta + temp$P7.theta + temp$O1.theta + temp$O2.theta + temp$P8.theta + temp$T8.theta + temp$AF4.theta + temp$F8.theta + temp$F4.theta + temp$FC6.theta
temp$alpha <- temp$AF3.alpha + temp$F7.alpha + temp$F3.alpha + temp$FC5.alpha + temp$T7.alpha + temp$P7.alpha + temp$O1.alpha + temp$O2.alpha + temp$P8.alpha + temp$T8.alpha + temp$AF4.alpha + temp$F8.alpha + temp$F4.alpha + temp$FC6.alpha
temp$betaL <- temp$AF3.betaL + temp$F7.betaL + temp$F3.betaL + temp$FC5.betaL + temp$T7.betaL + temp$P7.betaL + temp$O1.betaL + temp$O2.betaL + temp$P8.betaL + temp$T8.betaL + temp$AF4.betaL + temp$F8.betaL + temp$F4.betaL + temp$FC6.betaL
temp$betaH <- temp$AF3.betaH + temp$F7.betaH + temp$F3.betaH + temp$FC5.betaH + temp$T7.betaH + temp$P7.betaH + temp$O1.betaH + temp$O2.betaH + temp$P8.betaH + temp$T8.betaH + temp$AF4.betaH + temp$F8.betaH + temp$F4.betaH + temp$FC6.betaH
temp$gamma <- temp$AF3.gamma + temp$F7.gamma + temp$F3.gamma + temp$FC5.gamma + temp$T7.gamma + temp$P7.gamma + temp$O1.gamma + temp$O2.gamma + temp$P8.gamma + temp$T8.gamma + temp$AF4.gamma + temp$F8.gamma + temp$F4.gamma + temp$FC6.gamma
allNoneConscientiousFeaturesTrackedFromStage1 <- temp
columnNoneConscientiousCounter <- ncol(allNoneConscientiousFeaturesTrackedFromStage1)
barplot(colSums(allNoneConscientiousFeaturesTrackedFromStage1[,(34):103]))
barplot(colSums(allNoneConscientiousFeaturesTrackedFromStage1[,(columnConscientiousCounter - 4):columnConscientiousCounter]))
barplot(colSums(allNoneConscientiousFeaturesTrackedFromStage1[,(columnConscientiousCounter - 2):columnConscientiousCounter]))
# Condition C
temp <- allNoneFeaturesTrackedFromStage1
temp$theta <- temp$AF3.theta + temp$F7.theta + temp$F3.theta + temp$FC5.theta + temp$T7.theta + temp$P7.theta + temp$O1.theta + temp$O2.theta + temp$P8.theta + temp$T8.theta + temp$AF4.theta + temp$F8.theta + temp$F4.theta + temp$FC6.theta
temp$alpha <- temp$AF3.alpha + temp$F7.alpha + temp$F3.alpha + temp$FC5.alpha + temp$T7.alpha + temp$P7.alpha + temp$O1.alpha + temp$O2.alpha + temp$P8.alpha + temp$T8.alpha + temp$AF4.alpha + temp$F8.alpha + temp$F4.alpha + temp$FC6.alpha
temp$betaL <- temp$AF3.betaL + temp$F7.betaL + temp$F3.betaL + temp$FC5.betaL + temp$T7.betaL + temp$P7.betaL + temp$O1.betaL + temp$O2.betaL + temp$P8.betaL + temp$T8.betaL + temp$AF4.betaL + temp$F8.betaL + temp$F4.betaL + temp$FC6.betaL
temp$betaH <- temp$AF3.betaH + temp$F7.betaH + temp$F3.betaH + temp$FC5.betaH + temp$T7.betaH + temp$P7.betaH + temp$O1.betaH + temp$O2.betaH + temp$P8.betaH + temp$T8.betaH + temp$AF4.betaH + temp$F8.betaH + temp$F4.betaH + temp$FC6.betaH
temp$gamma <- temp$AF3.gamma + temp$F7.gamma + temp$F3.gamma + temp$FC5.gamma + temp$T7.gamma + temp$P7.gamma + temp$O1.gamma + temp$O2.gamma + temp$P8.gamma + temp$T8.gamma + temp$AF4.gamma + temp$F8.gamma + temp$F4.gamma + temp$FC6.gamma
allNoneFeaturesTrackedFromStage1 <- temp
columnNoneCounter <- ncol(allNoneFeaturesTrackedFromStage1)
barplot(colSums(allNoneFeaturesTrackedFromStage1[,(34):103]))
barplot(colSums(allNoneFeaturesTrackedFromStage1[,(columnConscientiousCounter - 4):columnConscientiousCounter]))
barplot(colSums(allNoneFeaturesTrackedFromStage1[,(columnConscientiousCounter - 2):columnConscientiousCounter]))
# Filter C Condition data frame
# alls cells with "NA" = 0, all rows with "NA" to cut out
allNoneFeaturesTrackedFromStage1 <- na.omit(allNoneFeaturesTrackedFromStage1)
# clean ids -> only numbers
allNoneFeaturesTrackedFromStage1$pId <- str_replace(allNoneFeaturesTrackedFromStage1$pId, "id-", "")
allNoneFeaturesTrackedFromStage1$pId <- str_replace(allNoneFeaturesTrackedFromStage1$pId, "b", "")
# switch time and id
numberOfColumns <- ncol(allNoneFeaturesTrackedFromStage1)
allNoneFeaturesTrackedFromStage1 <- allNoneFeaturesTrackedFromStage1[, c(2,1,3:numberOfColumns)] # leave the row index blank to keep all rows
# filter: remove unused/bad/const_to_zero/strings  columns
allNoneFeaturesTrackedFromStage1 <- subset(allNoneFeaturesTrackedFromStage1, select=-c(lex))
allNoneFeaturesTrackedFromStage1 <- subset(allNoneFeaturesTrackedFromStage1, select=-c(STARTED, LASTDATA, MAXPAGE, DegTimeThreshold, DegTimeThresholdForOnePage, DegTimeValueForOnePage)) # MAXPAGE is optional
# convert all columns to numeric
numberOfColumns <- ncol(allNoneFeaturesTrackedFromStage1)
allNoneFeaturesTrackedFromStage1[,1:numberOfColumns] <- lapply(allNoneFeaturesTrackedFromStage1[,1:numberOfColumns], function (x) as.numeric(x))
write.csv2(allNoneFeaturesTrackedFromStage1, "All_Participents_Condition-C_WaveSum_DataFrame.csv", row.names = FALSE)
# Condition A-B-C
temp <- allFeaturesTrackedFromStage1
temp$theta <- temp$AF3.theta + temp$F7.theta + temp$F3.theta + temp$FC5.theta + temp$T7.theta + temp$P7.theta + temp$O1.theta + temp$O2.theta + temp$P8.theta + temp$T8.theta + temp$AF4.theta + temp$F8.theta + temp$F4.theta + temp$FC6.theta
temp$alpha <- temp$AF3.alpha + temp$F7.alpha + temp$F3.alpha + temp$FC5.alpha + temp$T7.alpha + temp$P7.alpha + temp$O1.alpha + temp$O2.alpha + temp$P8.alpha + temp$T8.alpha + temp$AF4.alpha + temp$F8.alpha + temp$F4.alpha + temp$FC6.alpha
temp$betaL <- temp$AF3.betaL + temp$F7.betaL + temp$F3.betaL + temp$FC5.betaL + temp$T7.betaL + temp$P7.betaL + temp$O1.betaL + temp$O2.betaL + temp$P8.betaL + temp$T8.betaL + temp$AF4.betaL + temp$F8.betaL + temp$F4.betaL + temp$FC6.betaL
temp$betaH <- temp$AF3.betaH + temp$F7.betaH + temp$F3.betaH + temp$FC5.betaH + temp$T7.betaH + temp$P7.betaH + temp$O1.betaH + temp$O2.betaH + temp$P8.betaH + temp$T8.betaH + temp$AF4.betaH + temp$F8.betaH + temp$F4.betaH + temp$FC6.betaH
temp$gamma <- temp$AF3.gamma + temp$F7.gamma + temp$F3.gamma + temp$FC5.gamma + temp$T7.gamma + temp$P7.gamma + temp$O1.gamma + temp$O2.gamma + temp$P8.gamma + temp$T8.gamma + temp$AF4.gamma + temp$F8.gamma + temp$F4.gamma + temp$FC6.gamma
allFeaturesTrackedFromStage1 <- temp
columnAllCounter <- ncol(allFeaturesTrackedFromStage1)
barplot(colSums(allFeaturesTrackedFromStage1[,(34):103]))
barplot(colSums(allFeaturesTrackedFromStage1[,(columnAllCounter - 4):columnAllCounter]))
barplot(colSums(allFeaturesTrackedFromStage1[,(columnAllCounter - 2):columnAllCounter]))
write.csv2(allFeaturesTrackedFromStage1, "All_Participents_WaveSum_DataFrame.csv", row.names = FALSE)
# Condition A-B-C Mean
temp <- allMeanFeaturesTrackedFromStage1
temp$theta <- temp$AF3.theta + temp$F7.theta + temp$F3.theta + temp$FC5.theta + temp$T7.theta + temp$P7.theta + temp$O1.theta + temp$O2.theta + temp$P8.theta + temp$T8.theta + temp$AF4.theta + temp$F8.theta + temp$F4.theta + temp$FC6.theta
temp$alpha <- temp$AF3.alpha + temp$F7.alpha + temp$F3.alpha + temp$FC5.alpha + temp$T7.alpha + temp$P7.alpha + temp$O1.alpha + temp$O2.alpha + temp$P8.alpha + temp$T8.alpha + temp$AF4.alpha + temp$F8.alpha + temp$F4.alpha + temp$FC6.alpha
temp$betaL <- temp$AF3.betaL + temp$F7.betaL + temp$F3.betaL + temp$FC5.betaL + temp$T7.betaL + temp$P7.betaL + temp$O1.betaL + temp$O2.betaL + temp$P8.betaL + temp$T8.betaL + temp$AF4.betaL + temp$F8.betaL + temp$F4.betaL + temp$FC6.betaL
temp$betaH <- temp$AF3.betaH + temp$F7.betaH + temp$F3.betaH + temp$FC5.betaH + temp$T7.betaH + temp$P7.betaH + temp$O1.betaH + temp$O2.betaH + temp$P8.betaH + temp$T8.betaH + temp$AF4.betaH + temp$F8.betaH + temp$F4.betaH + temp$FC6.betaH
temp$gamma <- temp$AF3.gamma + temp$F7.gamma + temp$F3.gamma + temp$FC5.gamma + temp$T7.gamma + temp$P7.gamma + temp$O1.gamma + temp$O2.gamma + temp$P8.gamma + temp$T8.gamma + temp$AF4.gamma + temp$F8.gamma + temp$F4.gamma + temp$FC6.gamma
allMeanFeaturesTrackedFromStage1 <- temp
columnAllMeanCounter <- ncol(allMeanFeaturesTrackedFromStage1)
barplot(colSums(allMeanFeaturesTrackedFromStage1[,(34):103]))
barplot(colSums(allMeanFeaturesTrackedFromStage1[,(columnAllMeanCounter - 4):columnAllMeanCounter]))
barplot(colSums(allMeanFeaturesTrackedFromStage1[,(columnAllMeanCounter - 2):columnAllMeanCounter]))
write.csv2(allMeanFeaturesTrackedFromStage1, "All_Participents_WaveSum_Mean_DataFrame.csv", row.names = FALSE)
rowConscientiousCounter     <- nrow(allConscientiousFeaturesTrackedFromStage1)
rowNoneConscientiousCounter <- nrow(allNoneConscientiousFeaturesTrackedFromStage1)
#rowNoneCounter              <- nrow(allNoneFeaturesTrackedFromStage1)
rowAllCounter               <- nrow(allFeaturesTrackedFromStage1)
# ANOVA test one-way (overall variance of the data, statistically significant)
any.way <- aov(EvaluatedGlobalTIMERSICalc ~ ., data = allFeaturesTrackedFromStage1)
# create descriptive statistic
summary(any.way)
# ANOVA test one-way (overall variance of the data, statistically significant)
any.way <- aov(DegTimeLowQuality ~ ., data = allFeaturesTrackedFromStage1)
# create descriptive statistic
summary(any.way)
# only if Condition A-B manuel set to clusters (Conscientious = 0 and None-Conscientious = 1)
# =======================================================================================================================
allFeaturesTrackedFromStage1$Conscientious <- 1
allFeaturesTrackedFromStage1$Conscientious[1:rowConscientiousCounter] <- 0
write.csv2(allFeaturesTrackedFromStage1, "All_Participents_Clusterd_WaveSum_DataFrame.csv", row.names = FALSE)
# only if Condition A-B manuel set to clusters (Conscientious = 0 and None-Conscientious = 1)
# =======================================================================================================================
allFeaturesTrackedFromStage1$Conscientious <- 1
allFeaturesTrackedFromStage1$Conscientious[1:rowConscientiousCounter] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(21,df$allFeaturesTrackedFromStage1)] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(21,allFeaturesTrackedFromStage1$pId)] <- 0
# only if Condition A-B manuel set to clusters (Conscientious = 0 and None-Conscientious = 1)
# =======================================================================================================================
allFeaturesTrackedFromStage1$Conscientious <- 1
allFeaturesTrackedFromStage1$Conscientious[1:rowConscientiousCounter] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(21,allFeaturesTrackedFromStage1$pId)] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(22,allFeaturesTrackedFromStage1$pId)] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(23,allFeaturesTrackedFromStage1$pId)] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(26,allFeaturesTrackedFromStage1$pId)] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(27,allFeaturesTrackedFromStage1$pId)] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(28,allFeaturesTrackedFromStage1$pId)] <- 0
allFeaturesTrackedFromStage1$Conscientious[match(29,allFeaturesTrackedFromStage1$pId)] <- 0
write.csv2(allFeaturesTrackedFromStage1, "All_Participents_Clusterd_WaveSum_DataFrame.csv", row.names = FALSE)
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 21] <- 0
View(allFeaturesTrackedFromStage1)
# only if Condition A-B manuel set to clusters (Conscientious = 0 and None-Conscientious = 1)
# =======================================================================================================================
allFeaturesTrackedFromStage1$Conscientious <- 1
allFeaturesTrackedFromStage1$Conscientious[1:rowConscientiousCounter] <- 0
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 21] <- 0
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 22] <- 0
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 23] <- 0
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 26] <- 0
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 27] <- 0
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 28] <- 0
allFeaturesTrackedFromStage1$Conscientious[allFeaturesTrackedFromStage1$pId == 29] <- 0
write.csv2(allFeaturesTrackedFromStage1, "All_Participents_Clusterd_WaveSum_DataFrame.csv", row.names = FALSE)
