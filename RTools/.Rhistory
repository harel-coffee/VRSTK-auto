}
#transformedBitalinoECGDataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-ECG_HearRateResults.txt')
#transformedBitalinoEDADataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-EDA_EdaResults.txt')
path <- file.path(condition,  type_biosppy, "/", id, "/")
biosppy_files <- list.files(path, pattern=".txt", all.files=T, full.names=T)
for (file in biosppy_files) {
if(grepl(id, file) && grepl("Stage-0", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage0) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage1) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage1 %<>% mutate_if(is.character, as.numeric)
transformedBitalinoECGDataFrameStage1$time <- as.integer(transformedBitalinoECGDataFrameStage1$time)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage2) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-0", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage0) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage1) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage1 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage2) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
}
#   1.2.1 Upsampling transformed Bitalino EDA DataFrame
source("UpsamplingTransformedBitalinoEDADataFrame.R", echo=TRUE)
transformedBitalinoEDADataFrameStage0 <- upsamplingTransformedBitalinoEdeDataFrame(0)
transformedBitalinoEDADataFrameStage1 <- upsamplingTransformedBitalinoEdeDataFrame(1)
transformedBitalinoEDADataFrameStage2 <- upsamplingTransformedBitalinoEdeDataFrame(2)
# 2. RawEmotivTrackingData
source("RawEmotivTrackingData.r", echo=TRUE)
# 3. RawBandPowerData
source("RawBandPowerData.r", echo=TRUE)
#   3.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
bandPowerDataFrameStage0 <- downsampling(3,0)
bandPowerDataFrameStage1 <- downsampling(3,1)
bandPowerDataFrameStage2 <- downsampling(3,2)
# 4. RawPerformanceMetricData
source("RawPerformanceMetricData.r", echo=TRUE)
#   4.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
# 4. RawPerformanceMetricData
source("RawPerformanceMetricData.r", echo=TRUE)
#   4.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
performanceMetricDataFrameStage0 <- downsampling(4,0)
performanceMetricDataFrameStage1 <- downsampling(4,1)
performanceMetricDataFrameStage2 <- downsampling(4,2)
# 5. PagesQualityParameters
source("PagesQualityParameters.r", echo=TRUE)
#   5.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
pagesQualityParametersStage1 <- downsampling(5,1)
pagesQualityParametersStage2 <- downsampling(5,2)
# 6. RawFixationSaccadsData
source("RawFixationSaccadesData.r", echo=TRUE)
#   6.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
eyeTrackingInformationStage0 <- downsampling(6,0)
eyeTrackingInformationStage1 <- downsampling(6,1)
eyeTrackingInformationStage2 <- downsampling(6,2)
# 7. RawVRQuestionnaireToolkitUncannyValleyData
source("RawVRQuestionnaireToolkitUncannyValleyData.r", echo=TRUE)
# 8. RawVRQuestionnaireToolkitSSQDataFrame
source("RawVRQuestionnaireToolkitSSQDataFrame.r", echo=TRUE)
# 9. Clear environment
source("CleanUpEnvironmentFromTemporaryUsedVariables.r", echo=TRUE)
#--------------------------------------------------
# 10. Data-Fusion of one Participant
rm(participent_13_DataFrame)
source("FusionOfTrackingDataOfOneParticipent.r", echo=TRUE)
participent_variable_name <- paste("participent_", id, "_DataFrame", sep="") #'participent_'+ as.character(id) + '_DataFrame'
assign(participent_variable_name, fuseParticipentDataFrames(id, condition, 1))
assign(participent_variable_name, unique(get(participent_variable_name)))
participent_Log <- duplicated(get(participent_variable_name))
print(participent_Log)
assign(participent_variable_name, get(participent_variable_name) %>% distinct(time, .keep_all = TRUE))
# add participent id to dataframe
nRows <- nrow(get(participent_variable_name))
#tempDataFrame <- data.frame(matrix(id, nrow = countRows, ncol = 1))
tempDataFrame <- NULL
tempDataFrame <- data.frame(pId = character())
tempDataFrame[1:nRows,] <- id
tempDataFrame <- cbind(tempDataFrame, get(participent_variable_name))
assign(participent_variable_name, tempDataFrame)
# some misc cleanup
rm(nRows)
rm(countRows)
rm(participent_13_DataFrame_temp)
rm(participent_13_Log)
rm(participent_Log)
# automation build process
library(dplyr)
library(magrittr)
# 0. Clear environment
source("CleanUpEnvironmentFromTemporaryUsedVariables.r", echo=TRUE)
# 1. ImportTrackingData
source("ImportTrackingData.r", echo=TRUE)
condition <- 'Condition A'
type_vrstk <- 'VRSTK'
type_biosppy <- 'Biosppy'
id <- 'id-10'
path <- file.path(condition,  type_vrstk, "/")
#   1.1 ImportTrackingData
# vrstk tracking files
#rawTrackingData <- ImportTrackingData('Condition A/VRSTK/Proband-id-1-Condition-A_8-18_15-23-31.json')
vrstk_files <- list.files(path, pattern=".json", all.files=T, full.names=T)
for (file in vrstk_files) {
if(grepl(id, file)){
rawTrackingData <- ImportTrackingData(file)
break
}
}
#transformedBitalinoECGDataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-ECG_HearRateResults.txt')
#transformedBitalinoEDADataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-EDA_EdaResults.txt')
path <- file.path(condition,  type_biosppy, "/", id, "/")
biosppy_files <- list.files(path, pattern=".txt", all.files=T, full.names=T)
for (file in biosppy_files) {
if(grepl(id, file) && grepl("Stage-0", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage0) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage1) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage1 %<>% mutate_if(is.character, as.numeric)
transformedBitalinoECGDataFrameStage1$time <- as.integer(transformedBitalinoECGDataFrameStage1$time)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage2) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-0", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage0) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage1) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage1 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage2) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
}
#   1.2.1 Upsampling transformed Bitalino EDA DataFrame
source("UpsamplingTransformedBitalinoEDADataFrame.R", echo=TRUE)
transformedBitalinoEDADataFrameStage0 <- upsamplingTransformedBitalinoEdeDataFrame(0)
transformedBitalinoEDADataFrameStage1 <- upsamplingTransformedBitalinoEdeDataFrame(1)
transformedBitalinoEDADataFrameStage2 <- upsamplingTransformedBitalinoEdeDataFrame(2)
# 2. RawEmotivTrackingData
source("RawEmotivTrackingData.r", echo=TRUE)
# 3. RawBandPowerData
source("RawBandPowerData.r", echo=TRUE)
#   3.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
bandPowerDataFrameStage0 <- downsampling(3,0)
bandPowerDataFrameStage1 <- downsampling(3,1)
bandPowerDataFrameStage2 <- downsampling(3,2)
# 4. RawPerformanceMetricData
source("RawPerformanceMetricData.r", echo=TRUE)
#   4.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
performanceMetricDataFrameStage0 <- downsampling(4,0)
performanceMetricDataFrameStage1 <- downsampling(4,1)
performanceMetricDataFrameStage2 <- downsampling(4,2)
# 5. PagesQualityParameters
source("PagesQualityParameters.r", echo=TRUE)
#   5.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
pagesQualityParametersStage1 <- downsampling(5,1)
pagesQualityParametersStage2 <- downsampling(5,2)
# 6. RawFixationSaccadsData
source("RawFixationSaccadesData.r", echo=TRUE)
#   6.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
eyeTrackingInformationStage0 <- downsampling(6,0)
eyeTrackingInformationStage1 <- downsampling(6,1)
eyeTrackingInformationStage2 <- downsampling(6,2)
# 7. RawVRQuestionnaireToolkitUncannyValleyData
source("RawVRQuestionnaireToolkitUncannyValleyData.r", echo=TRUE)
# 8. RawVRQuestionnaireToolkitSSQDataFrame
source("RawVRQuestionnaireToolkitSSQDataFrame.r", echo=TRUE)
# 9. Clear environment
source("CleanUpEnvironmentFromTemporaryUsedVariables.r", echo=TRUE)
#--------------------------------------------------
# 10. Data-Fusion of one Participant
#rm(participent_13_DataFrame)
source("FusionOfTrackingDataOfOneParticipent.r", echo=TRUE)
participent_variable_name <- paste("participent_", id, "_DataFrame", sep="") #'participent_'+ as.character(id) + '_DataFrame'
assign(participent_variable_name, fuseParticipentDataFrames(id, condition, 1))
assign(participent_variable_name, unique(get(participent_variable_name)))
participent_Log <- duplicated(get(participent_variable_name))
print(participent_Log)
assign(participent_variable_name, get(participent_variable_name) %>% distinct(time, .keep_all = TRUE))
# add participent id to dataframe
nRows <- nrow(get(participent_variable_name))
#tempDataFrame <- data.frame(matrix(id, nrow = countRows, ncol = 1))
tempDataFrame <- NULL
tempDataFrame <- data.frame(pId = character())
tempDataFrame[1:nRows,] <- id
tempDataFrame <- cbind(tempDataFrame, get(participent_variable_name))
assign(participent_variable_name, tempDataFrame)
# some misc cleanup
rm(nRows)
rm(countRows)
#rm(participent_13_DataFrame_temp)
#rm(participent_13_Log)
rm(participent_Log)
View(`participent_id-1_DataFrame`)
View(`participent_id-10_DataFrame`)
# automation build process
library(dplyr)
library(magrittr)
# 0. Clear environment
source("CleanUpEnvironmentFromTemporaryUsedVariables.r", echo=TRUE)
# 1. ImportTrackingData
source("ImportTrackingData.r", echo=TRUE)
condition <- 'Condition A'
type_vrstk <- 'VRSTK'
type_biosppy <- 'Biosppy'
id <- 'id-2'
path <- file.path(condition,  type_vrstk, "/")
#   1.1 ImportTrackingData
# vrstk tracking files
#rawTrackingData <- ImportTrackingData('Condition A/VRSTK/Proband-id-1-Condition-A_8-18_15-23-31.json')
vrstk_files <- list.files(path, pattern=".json", all.files=T, full.names=T)
for (file in vrstk_files) {
if(grepl(id, file)){
rawTrackingData <- ImportTrackingData(file)
break
}
}
#transformedBitalinoECGDataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-ECG_HearRateResults.txt')
#transformedBitalinoEDADataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-EDA_EdaResults.txt')
path <- file.path(condition,  type_biosppy, "/", id, "/")
biosppy_files <- list.files(path, pattern=".txt", all.files=T, full.names=T)
for (file in biosppy_files) {
if(grepl(id, file) && grepl("Stage-0", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage0) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage1) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage1 %<>% mutate_if(is.character, as.numeric)
transformedBitalinoECGDataFrameStage1$time <- as.integer(transformedBitalinoECGDataFrameStage1$time)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage2) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-0", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage0) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage1) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage1 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage2) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
}
#   1.2.1 Upsampling transformed Bitalino EDA DataFrame
source("UpsamplingTransformedBitalinoEDADataFrame.R", echo=TRUE)
transformedBitalinoEDADataFrameStage0 <- upsamplingTransformedBitalinoEdeDataFrame(0)
transformedBitalinoEDADataFrameStage1 <- upsamplingTransformedBitalinoEdeDataFrame(1)
transformedBitalinoEDADataFrameStage2 <- upsamplingTransformedBitalinoEdeDataFrame(2)
# 2. RawEmotivTrackingData
source("RawEmotivTrackingData.r", echo=TRUE)
# 3. RawBandPowerData
source("RawBandPowerData.r", echo=TRUE)
View(rawTrackingData)
#   3.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
bandPowerDataFrameStage0 <- downsampling(3,0)
bandPowerDataFrameStage1 <- downsampling(3,1)
bandPowerDataFrameStage2 <- downsampling(3,2)
# 4. RawPerformanceMetricData
source("RawPerformanceMetricData.r", echo=TRUE)
#   4.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
performanceMetricDataFrameStage0 <- downsampling(4,0)
performanceMetricDataFrameStage1 <- downsampling(4,1)
performanceMetricDataFrameStage2 <- downsampling(4,2)
# 5. PagesQualityParameters
source("PagesQualityParameters.r", echo=TRUE)
#   5.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
pagesQualityParametersStage1 <- downsampling(5,1)
pagesQualityParametersStage2 <- downsampling(5,2)
# 6. RawFixationSaccadsData
source("RawFixationSaccadesData.r", echo=TRUE)
#   6.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
eyeTrackingInformationStage0 <- downsampling(6,0)
eyeTrackingInformationStage1 <- downsampling(6,1)
eyeTrackingInformationStage2 <- downsampling(6,2)
# 7. RawVRQuestionnaireToolkitUncannyValleyData
source("RawVRQuestionnaireToolkitUncannyValleyData.r", echo=TRUE)
# 8. RawVRQuestionnaireToolkitSSQDataFrame
source("RawVRQuestionnaireToolkitSSQDataFrame.r", echo=TRUE)
# 9. Clear environment
source("CleanUpEnvironmentFromTemporaryUsedVariables.r", echo=TRUE)
#--------------------------------------------------
# 10. Data-Fusion of one Participant
#rm(participent_13_DataFrame)
source("FusionOfTrackingDataOfOneParticipent.r", echo=TRUE)
participent_variable_name <- paste("participent_", id, "_DataFrame", sep="") #'participent_'+ as.character(id) + '_DataFrame'
assign(participent_variable_name, fuseParticipentDataFrames(id, condition, 1))
assign(participent_variable_name, unique(get(participent_variable_name)))
participent_Log <- duplicated(get(participent_variable_name))
print(participent_Log)
assign(participent_variable_name, get(participent_variable_name) %>% distinct(time, .keep_all = TRUE))
# add participent id to dataframe
nRows <- nrow(get(participent_variable_name))
#tempDataFrame <- data.frame(matrix(id, nrow = countRows, ncol = 1))
tempDataFrame <- NULL
tempDataFrame <- data.frame(pId = character())
tempDataFrame[1:nRows,] <- id
tempDataFrame <- cbind(tempDataFrame, get(participent_variable_name))
assign(participent_variable_name, tempDataFrame)
# some misc cleanup
rm(nRows)
rm(countRows)
#rm(participent_13_DataFrame_temp)
#rm(participent_13_Log)
rm(participent_Log)
View(`participent_id-2_DataFrame`)
# 0. Clear environment
source("CleanUpEnvironmentFromTemporaryUsedVariables.r", echo=TRUE)
# 1. ImportTrackingData
source("ImportTrackingData.r", echo=TRUE)
condition <- 'Condition A'
type_vrstk <- 'VRSTK'
type_biosppy <- 'Biosppy'
id <- 'id-1'
path <- file.path(condition,  type_vrstk, "/")
#   1.1 ImportTrackingData
# vrstk tracking files
#rawTrackingData <- ImportTrackingData('Condition A/VRSTK/Proband-id-1-Condition-A_8-18_15-23-31.json')
vrstk_files <- list.files(path, pattern=".json", all.files=T, full.names=T)
for (file in vrstk_files) {
if(grepl(id, file)){
rawTrackingData <- ImportTrackingData(file)
break
}
}
#transformedBitalinoECGDataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-ECG_HearRateResults.txt')
#transformedBitalinoEDADataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-EDA_EdaResults.txt')
path <- file.path(condition,  type_biosppy, "/", id, "/")
biosppy_files <- list.files(path, pattern=".txt", all.files=T, full.names=T)
for (file in biosppy_files) {
if(grepl(id, file) && grepl("Stage-0", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage0) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage1) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage1 %<>% mutate_if(is.character, as.numeric)
transformedBitalinoECGDataFrameStage1$time <- as.integer(transformedBitalinoECGDataFrameStage1$time)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage2) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-0", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage0) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage1) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage1 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage2) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
}
# automation build process
library(dplyr)
library(magrittr)
# 0. Clear environment
source("CleanUpEnvironmentFromTemporaryUsedVariables.r", echo=TRUE)
# 1. ImportTrackingData
source("ImportTrackingData.r", echo=TRUE)
condition <- 'Condition A'
type_vrstk <- 'VRSTK'
type_biosppy <- 'Biosppy'
id <- 'id-1'
path <- file.path(condition,  type_vrstk, "/")
#   1.1 ImportTrackingData
# vrstk tracking files
#rawTrackingData <- ImportTrackingData('Condition A/VRSTK/Proband-id-1-Condition-A_8-18_15-23-31.json')
vrstk_files <- list.files(path, pattern=".json", all.files=T, full.names=T)
for (file in vrstk_files) {
if(grepl(id, file)){
rawTrackingData <- ImportTrackingData(file)
break
}
}
#transformedBitalinoECGDataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-ECG_HearRateResults.txt')
#transformedBitalinoEDADataFrameStage2 <- ImporttransformedBitalinoTrackingData('Condition A/Biosppy/id-1/Bitalinoi-Proband-Stage-2-id-1-Condition-A-EDA_EdaResults.txt')
path <- file.path(condition,  type_biosppy, "/", id, "/")
biosppy_files <- list.files(path, pattern=".txt", all.files=T, full.names=T)
for (file in biosppy_files) {
if(grepl(id, file) && grepl("Stage-0", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage0) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage1) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage1 %<>% mutate_if(is.character, as.numeric)
transformedBitalinoECGDataFrameStage1$time <- as.integer(transformedBitalinoECGDataFrameStage1$time)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("ECG_HearRateResults", file)){
transformedBitalinoECGDataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoECGDataFrameStage2) <- c('time','HeartRate','RPeaks')
transformedBitalinoECGDataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-0", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage0 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage0) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage0 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-1", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage1 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage1) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage1 %<>% mutate_if(is.character, as.numeric)
}
if(grepl(id, file) && grepl("Stage-2", file) && grepl("EDA_EdaResults", file)){
transformedBitalinoEDADataFrameStage2 <- ImportTransformedBitalinoTrackingData(file)
colnames(transformedBitalinoEDADataFrameStage2) <- c('onsets','peaks','amps')
transformedBitalinoEDADataFrameStage2 %<>% mutate_if(is.character, as.numeric)
}
}
#   1.2.1 Upsampling transformed Bitalino EDA DataFrame
source("UpsamplingTransformedBitalinoEDADataFrame.R", echo=TRUE)
transformedBitalinoEDADataFrameStage0 <- upsamplingTransformedBitalinoEdeDataFrame(0)
transformedBitalinoEDADataFrameStage1 <- upsamplingTransformedBitalinoEdeDataFrame(1)
transformedBitalinoEDADataFrameStage2 <- upsamplingTransformedBitalinoEdeDataFrame(2)
# 2. RawEmotivTrackingData
source("RawEmotivTrackingData.r", echo=TRUE)
# 3. RawBandPowerData
source("RawBandPowerData.r", echo=TRUE)
#   3.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
bandPowerDataFrameStage0 <- downsampling(3,0)
bandPowerDataFrameStage1 <- downsampling(3,1)
bandPowerDataFrameStage2 <- downsampling(3,2)
# 4. RawPerformanceMetricData
source("RawPerformanceMetricData.r", echo=TRUE)
#   4.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
performanceMetricDataFrameStage0 <- downsampling(4,0)
performanceMetricDataFrameStage1 <- downsampling(4,1)
performanceMetricDataFrameStage2 <- downsampling(4,2)
# 5. PagesQualityParameters
source("PagesQualityParameters.r", echo=TRUE)
#   5.1 Downsampling/Upsampling
source("DownsampleToBitalinoResults.r", echo=TRUE)
pagesQualityParametersStage1 <- downsampling(5,1)
pagesQualityParametersStage2 <- downsampling(5,2)
View(pagesQualityParametersStage1)
pagesTIMESUMsStage1 <- data.frame("MISSING" = c(as.numeric(0)),
"TIME_RSI" = c(as.numeric(0)),
"TIME_SUM" = c(as.numeric(pagesQualityParametersStage1[-1, 7])),
"MISSREL" = c(as.numeric(0)),
"DEG_TIME" = c(as.numeric(pagesQualityParametersStage1[-1, 10])));
View(pagesTIMESUMsStage1)
lastRow <- nrow(pagesQualityParametersStage1)
pagesTIMESUMsStage1 <- NULL
pagesTIMESUMsStage1 <- data.frame("MISSING" = c(as.numeric(0)),
"TIME_RSI" = c(as.numeric(0)),
"TIME_SUM" = c(as.numeric(pagesQualityParametersStage1[lastRow, 7])),
"MISSREL" = c(as.numeric(0)),
"DEG_TIME" = c(as.numeric(pagesQualityParametersStage1[lastRow, 10])));
