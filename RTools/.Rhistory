as.numeric(splittedBandPowerValues[27]), as.numeric(splittedBandPowerValues[28]), as.numeric(splittedBandPowerValues[29]), as.numeric(splittedBandPowerValues[30]), as.numeric(splittedBandPowerValues[31]),
as.numeric(splittedBandPowerValues[32]), as.numeric(splittedBandPowerValues[33]), as.numeric(splittedBandPowerValues[34]), as.numeric(splittedBandPowerValues[35]), as.numeric(splittedBandPowerValues[36]),
as.numeric(splittedBandPowerValues[37]), as.numeric(splittedBandPowerValues[38]), as.numeric(splittedBandPowerValues[39]), as.numeric(splittedBandPowerValues[40]), as.numeric(splittedBandPowerValues[41]),
as.numeric(splittedBandPowerValues[42]), as.numeric(splittedBandPowerValues[43]), as.numeric(splittedBandPowerValues[44]), as.numeric(splittedBandPowerValues[45]), as.numeric(splittedBandPowerValues[46]),
as.numeric(splittedBandPowerValues[47]), as.numeric(splittedBandPowerValues[48]), as.numeric(splittedBandPowerValues[49]), as.numeric(splittedBandPowerValues[50]), as.numeric(splittedBandPowerValues[51]),
as.numeric(splittedBandPowerValues[52]), as.numeric(splittedBandPowerValues[53]), as.numeric(splittedBandPowerValues[54]), as.numeric(splittedBandPowerValues[55]), as.numeric(splittedBandPowerValues[56]),
as.numeric(splittedBandPowerValues[57]), as.numeric(splittedBandPowerValues[58]), as.numeric(splittedBandPowerValues[59]), as.numeric(splittedBandPowerValues[60]), as.numeric(splittedBandPowerValues[61]),
as.numeric(splittedBandPowerValues[62]), as.numeric(splittedBandPowerValues[63]), as.numeric(splittedBandPowerValues[64]), as.numeric(splittedBandPowerValues[65]), as.numeric(splittedBandPowerValues[66]),
as.numeric(splittedBandPowerValues[67]), as.numeric(splittedBandPowerValues[68]), as.numeric(splittedBandPowerValues[69]), as.numeric(splittedBandPowerValues[70]), as.numeric(splittedBandPowerValues[71]));
rawBandPowerDataFrameStage2Temp <- rawBandPowerDataFrameStage2
rawBandPowerDataFrameStage2Temp[nrow(rawBandPowerDataFrameStage2) + 1, ] <- row
rawBandPowerDataFrameStage2 <- rawBandPowerDataFrameStage2Temp
}
}
}
rawBandPowerDataFrameStage2Temp <- NULL
row <- NULL
tempDataFrame <- NULL
splittedBandPowerValues <- NULL
rowBandPowerValue <- NULL
rowTimeValue <- NULL
View(rawBandPowerDataFrameStage0)
View(rawTrackingData)
rawVRQuestionnaireToolkitSSQDataStage2 <- rawTrackingData[["Stage2"]][["VRQuestionnaireToolkitSSQ37936"]]
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- NULL
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp <- NULL
row <- NULL
for(i in 1:nrow(rawVRQuestionnaireToolkitSSQDataStage2)) {
rowTimeValue <- rawVRQuestionnaireToolkitSSQDataStage2$time[i]
rawMissingValue <- rawVRQuestionnaireToolkitSSQDataStage2$MISSING_Message_QualityParameters[i]
rawTIMERSIValue <- rawVRQuestionnaireToolkitSSQDataStage2$TIME_RSI_Message_QualityParameters[i]
rawTIMESUMValue <- rawVRQuestionnaireToolkitSSQDataStage2$TIME_SUM_Message_QualityParameters[i]
rawMISSRELValue <- rawVRQuestionnaireToolkitSSQDataStage2$MISSREL_Message_QualityParameters[i]
rawDEGTIMEValue <- rawVRQuestionnaireToolkitSSQDataStage2$DEG_TIME_Message_QualityParameters[i]
rawLastTIMESUM <- rawVRQuestionnaireToolkitSSQDataStage2$LastQuestionnaire_TIME_SUM_QualityParameters[i]
if (!is.null(rawMissingValue) && !is.na(rawMissingValue) && !is.nan(rawMissingValue) && length(rawMissingValue) && rawMissingValue != "")
{
splittedTIMERSIValue <- stringr::str_split(rawTIMERSIValue, ";")[[1]]
splittedMISSRELValue <- stringr::str_split(rawMISSRELValue, ";")[[1]]
if (is.null(rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1))
{
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- data.frame("time" = c(as.numeric(rowTimeValue)), "MISSING" = c(as.numeric(rawMissingValue)),
"TIME_RSI" = c(as.numeric(splittedTIMERSIValue[1])), "TIME_SUM" = c(as.numeric(rawTIMESUMValue)),
"MISSREL" = c(as.numeric(splittedMISSRELValue[1])), "DEG_TIME" = c(as.numeric(rawDEGTIMEValue)),
"LastQuestionnaire_TIME_SUM" = c(as.numeric(rawLastTIMESUM)));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(rawMissingValue),
as.numeric(splittedTIMERSIValue[1]), as.numeric(rawTIMESUMValue),
as.numeric(splittedMISSRELValue[1]), as.numeric(rawDEGTIMEValue),
as.numeric(rawLastTIMESUM))
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp <- rawVRQuestionnaireToolkitSSQDataFrameStage2
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp[nrow(rawVRQuestionnaireToolkitSSQDataFrameStage2) + 1, ] <- row
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- rawVRQuestionnaireToolkitSSQDataFrameStage2Temp
}
}
}
rawVRQuestionnaireToolkitUncannyValleyDataStage1
rawVRQuestionnaireToolkitUncannyValleyDataStage1
rawVRQuestionnaireToolkitUncannyValleyDataStage1 <- rawTrackingData[["Stage1"]][["VRQuestionnaireToolkitUncannyValley34206"]]
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1 <- NULL
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp <- NULL
row <- NULL
for(i in 1:nrow(rawVRQuestionnaireToolkitUncannyValleyDataStage1)) {
rowTimeValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$time[i]
rawMissingValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$MISSING_Message_QualityParameters[i]
rawTIMERSIValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$TIME_RSI_Message_QualityParameters[i]
rawTIMESUMValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$TIME_SUM_Message_QualityParameters[i]
rawMISSRELValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$MISSREL_Message_QualityParameters[i]
rawDEGTIMEValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$DEG_TIME_Message_QualityParameters[i]
rawLastTIMESUM <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$LastQuestionnaire_TIME_SUM_QualityParameters[i]
if (!is.null(rawMissingValue) && !is.na(rawMissingValue) && !is.nan(rawMissingValue) && length(rawMissingValue) && rawMissingValue != "")
{
splittedTIMERSIValue <- stringr::str_split(rawTIMERSIValue, ";")[[1]]
splittedMISSRELValue <- stringr::str_split(rawMISSRELValue, ";")[[1]]
if (is.null(rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1))
{
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1 <- data.frame("time" = c(as.numeric(rowTimeValue)), "MISSING" = c(as.numeric(rawMissingValue)),
"TIME_RSI" = c(as.numeric(splittedTIMERSIValue[1])), "TIME_SUM" = c(as.numeric(rawTIMESUMValue)),
"MISSREL" = c(as.numeric(splittedMISSRELValue[1])), "DEG_TIME" = c(as.numeric(rawDEGTIMEValue)),
"LastQuestionnaire_TIME_SUM" = c(as.numeric(rawLastTIMESUM)));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(rawMissingValue),
as.numeric(splittedTIMERSIValue[1]), as.numeric(rawTIMESUMValue),
as.numeric(splittedMISSRELValue[1]), as.numeric(rawDEGTIMEValue),
as.numeric(rawLastTIMESUM))
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp <- rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp[nrow(rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1) + 1, ] <- row
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1 <- rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp
}
}
}
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp <- NULL
row <- NULL
splittedTIMERSIValue <- NULL
splittedMISSRELValue <- NULL
rowTimeValue <- NULL
rawMissingValue <- NULL
rawTIMERSIValue <- NULL
rawTIMESUMValue <- NULL
rawMISSRELValue <- NULL
rawDEGTIMEValue <- NULL
rawLastTIMESUM <- NULL
View(rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1)
rawTrackingData[["Stage1"]][["VRQuestionnaireToolkitUncannyValley34206"]][["TIME_RSI_Message_QualityParameters"]]
rawVRQuestionnaireToolkitUncannyValleyDataStage1 <- rawTrackingData[["Stage1"]][["VRQuestionnaireToolkitUncannyValley34206"]]
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1 <- NULL
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp <- NULL
row <- NULL
for(i in 1:nrow(rawVRQuestionnaireToolkitUncannyValleyDataStage1)) {
rowTimeValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$time[i]
rawMissingValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$MISSING_Message_QualityParameters[i]
rawTIMERSIValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$TIME_RSI_Message_QualityParameters[i]
rawTIMESUMValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$TIME_SUM_Message_QualityParameters[i]
rawMISSRELValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$MISSREL_Message_QualityParameters[i]
rawDEGTIMEValue <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$DEG_TIME_Message_QualityParameters[i]
rawLastTIMESUM <- rawVRQuestionnaireToolkitUncannyValleyDataStage1$LastQuestionnaire_TIME_SUM_QualityParameters[i]
if (!is.null(rawMissingValue) && !is.na(rawMissingValue) && !is.nan(rawMissingValue) && length(rawMissingValue) && rawMissingValue != "")
{
splittedTIMERSIValue <- stringr::str_split(rawTIMERSIValue, ";")[[1]]
splittedMISSRELValue <- stringr::str_split(rawMISSRELValue, ";")[[1]]
if (is.null(rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1))
{
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1 <- data.frame("time" = c(as.numeric(rowTimeValue)), "MISSING" = c(as.numeric(rawMissingValue)),
"TIME_RSI" = c(as.numeric(splittedTIMERSIValue[1])), "TIME_SUM" = c(as.numeric(rawTIMESUMValue)),
"MISSREL" = c(as.numeric(splittedMISSRELValue[1])), "DEG_TIME" = c(as.numeric(rawDEGTIMEValue)),
"LastQuestionnaire_TIME_SUM" = c(as.numeric(rawLastTIMESUM)));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(rawMissingValue),
as.numeric(splittedTIMERSIValue[1]), as.numeric(rawTIMESUMValue),
as.numeric(splittedMISSRELValue[1]), as.numeric(rawDEGTIMEValue),
as.numeric(rawLastTIMESUM))
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp <- rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp[nrow(rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1) + 1, ] <- row
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1 <- rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp
}
}
}
rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1Temp <- NULL
row <- NULL
splittedTIMERSIValue <- NULL
splittedMISSRELValue <- NULL
rowTimeValue <- NULL
rawMissingValue <- NULL
rawTIMERSIValue <- NULL
rawTIMESUMValue <- NULL
rawMISSRELValue <- NULL
rawDEGTIMEValue <- NULL
rawLastTIMESUM <- NULL
rawVRQuestionnaireToolkitSSQDataStage2 <- rawTrackingData[["Stage2"]][["VRQuestionnaireToolkitSSQ37936"]]
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- NULL
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp <- NULL
row <- NULL
for(i in 1:nrow(rawVRQuestionnaireToolkitSSQDataStage2)) {
rowTimeValue <- rawVRQuestionnaireToolkitSSQDataStage2$time[i]
rawMissingValue <- rawVRQuestionnaireToolkitSSQDataStage2$MISSING_Message_QualityParameters[i]
rawTIMERSIValue <- rawVRQuestionnaireToolkitSSQDataStage2$TIME_RSI_Message_QualityParameters[i]
rawTIMESUMValue <- rawVRQuestionnaireToolkitSSQDataStage2$TIME_SUM_Message_QualityParameters[i]
rawMISSRELValue <- rawVRQuestionnaireToolkitSSQDataStage2$MISSREL_Message_QualityParameters[i]
rawDEGTIMEValue <- rawVRQuestionnaireToolkitSSQDataStage2$DEG_TIME_Message_QualityParameters[i]
rawLastTIMESUM <- rawVRQuestionnaireToolkitSSQDataStage2$LastQuestionnaire_TIME_SUM_QualityParameters[i]
if (!is.null(rawMissingValue) && !is.na(rawMissingValue) && !is.nan(rawMissingValue) && length(rawMissingValue) && rawMissingValue != "")
{
splittedTIMERSIValue <- stringr::str_split(rawTIMERSIValue, ";")[[1]]
splittedMISSRELValue <- stringr::str_split(rawMISSRELValue, ";")[[1]]
if (is.null(rawVRQuestionnaireToolkitUncannyValleyDataFrameStage1))
{
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- data.frame("time" = c(as.numeric(rowTimeValue)), "MISSING" = c(as.numeric(rawMissingValue)),
"TIME_RSI" = c(as.numeric(splittedTIMERSIValue[1])), "TIME_SUM" = c(as.numeric(rawTIMESUMValue)),
"MISSREL" = c(as.numeric(splittedMISSRELValue[1])), "DEG_TIME" = c(as.numeric(rawDEGTIMEValue)),
"LastQuestionnaire_TIME_SUM" = c(as.numeric(rawLastTIMESUM)));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(rawMissingValue),
as.numeric(splittedTIMERSIValue[1]), as.numeric(rawTIMESUMValue),
as.numeric(splittedMISSRELValue[1]), as.numeric(rawDEGTIMEValue),
as.numeric(rawLastTIMESUM))
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp <- rawVRQuestionnaireToolkitSSQDataFrameStage2
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp[nrow(rawVRQuestionnaireToolkitSSQDataFrameStage2) + 1, ] <- row
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- rawVRQuestionnaireToolkitSSQDataFrameStage2Temp
}
}
}
rawVRQuestionnaireToolkitSSQDataStage2 <- rawTrackingData[["Stage2"]][["VRQuestionnaireToolkitSSQ37936"]]
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- NULL
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp <- NULL
row <- NULL
for(i in 1:nrow(rawVRQuestionnaireToolkitSSQDataStage2)) {
rowTimeValue <- rawVRQuestionnaireToolkitSSQDataStage2$time[i]
rawMissingValue <- rawVRQuestionnaireToolkitSSQDataStage2$MISSING_Message_QualityParameters[i]
rawTIMERSIValue <- rawVRQuestionnaireToolkitSSQDataStage2$TIME_RSI_Message_QualityParameters[i]
rawTIMESUMValue <- rawVRQuestionnaireToolkitSSQDataStage2$TIME_SUM_Message_QualityParameters[i]
rawMISSRELValue <- rawVRQuestionnaireToolkitSSQDataStage2$MISSREL_Message_QualityParameters[i]
rawDEGTIMEValue <- rawVRQuestionnaireToolkitSSQDataStage2$DEG_TIME_Message_QualityParameters[i]
rawLastTIMESUM <- rawVRQuestionnaireToolkitSSQDataStage2$LastQuestionnaire_TIME_SUM_QualityParameters[i]
if (!is.null(rawMissingValue) && !is.na(rawMissingValue) && !is.nan(rawMissingValue) && length(rawMissingValue) && rawMissingValue != "")
{
splittedTIMERSIValue <- stringr::str_split(rawTIMERSIValue, ";")[[1]]
splittedMISSRELValue <- stringr::str_split(rawMISSRELValue, ";")[[1]]
if (is.null(rawVRQuestionnaireToolkitSSQDataFrameStage2))
{
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- data.frame("time" = c(as.numeric(rowTimeValue)), "MISSING" = c(as.numeric(rawMissingValue)),
"TIME_RSI" = c(as.numeric(splittedTIMERSIValue[1])), "TIME_SUM" = c(as.numeric(rawTIMESUMValue)),
"MISSREL" = c(as.numeric(splittedMISSRELValue[1])), "DEG_TIME" = c(as.numeric(rawDEGTIMEValue)),
"LastQuestionnaire_TIME_SUM" = c(as.numeric(rawLastTIMESUM)));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(rawMissingValue),
as.numeric(splittedTIMERSIValue[1]), as.numeric(rawTIMESUMValue),
as.numeric(splittedMISSRELValue[1]), as.numeric(rawDEGTIMEValue),
as.numeric(rawLastTIMESUM))
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp <- rawVRQuestionnaireToolkitSSQDataFrameStage2
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp[nrow(rawVRQuestionnaireToolkitSSQDataFrameStage2) + 1, ] <- row
rawVRQuestionnaireToolkitSSQDataFrameStage2 <- rawVRQuestionnaireToolkitSSQDataFrameStage2Temp
}
}
}
rawVRQuestionnaireToolkitSSQDataFrameStage2Temp <- NULL
row <- NULL
splittedTIMERSIValue <- NULL
splittedMISSRELValue <- NULL
rowTimeValue <- NULL
rawMissingValue <- NULL
rawTIMERSIValue <- NULL
rawTIMESUMValue <- NULL
rawMISSRELValue <- NULL
rawDEGTIMEValue <- NULL
rawLastTIMESUM <- NULL
View(rawVRQuestionnaireToolkitSSQDataFrameStage2)
#-------------- Stage 0
rawPerformanceMetricDataFrameStage0 <- NULL
rawPerformanceMetricDataFrameStage0Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage0$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage0))
{
rawPerformanceMetricDataFrameStage0 <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
"lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
"int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedBandPowerValues[5]),
as.numeric(splittedBandPowerValues[6]),  as.numeric(splittedBandPowerValues[8]), as.numeric(splittedBandPowerValues[10]),
as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[14]));
rawPerformanceMetricDataFrameStage0Temp <- rawPerformanceMetricDataFrameStage0
rawPerformanceMetricDataFrameStage0Temp[nrow(rawPerformanceMetricDataFrameStage0) + 1, ] <- row
rawPerformanceMetricDataFrameStage0 <- rawPerformanceMetricDataFrameStage0Temp
}
}
}
rawPerformanceMetricDataFrameStage0Temp <- NULL
rowTimeValue <- NULL
rawPerformanceMetricValue <- NULL
splittedPerformanceMetricValue <- NULL
#-------------- Stage 1
rawPerformanceMetricDataFrameStage1 <- NULL
rawPerformanceMetricDataFrameStage1Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage1)) {
rowTimeValue <- rawEmotivTrackingDataStage1$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage1$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage1))
{
rawPerformanceMetricDataFrameStage1 <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
"lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
"int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedBandPowerValues[5]),
as.numeric(splittedBandPowerValues[6]),  as.numeric(splittedBandPowerValues[8]), as.numeric(splittedBandPowerValues[10]),
as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[14]));
rawPerformanceMetricDataFrameStage1Temp <- rawPerformanceMetricDataFrameStage1
rawPerformanceMetricDataFrameStage1Temp[nrow(rawPerformanceMetricDataFrameStage1) + 1, ] <- row
rawPerformanceMetricDataFrameStage1 <- rawPerformanceMetricDataFrameStage1Temp
}
}
}
rawPerformanceMetricDataFrameStage1Temp <- NULL
rowTimeValue <- NULL
rawPerformanceMetricValue <- NULL
splittedPerformanceMetricValue <- NULL
#-------------- Stage 2
rawPerformanceMetricDataFrameStage2 <- NULL
rawPerformanceMetricDataFrameStage2Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage2)) {
rowTimeValue <- rawEmotivTrackingDataStage2$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage2$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage2))
{
rawPerformanceMetricDataFrameStage2 <- tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
"lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
"int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedBandPowerValues[5]),
as.numeric(splittedBandPowerValues[6]),  as.numeric(splittedBandPowerValues[8]), as.numeric(splittedBandPowerValues[10]),
as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[14]));
rawPerformanceMetricDataFrameStage2Temp <- rawPerformanceMetricDataFrameStage2
rawPerformanceMetricDataFrameStage2Temp[nrow(rawPerformanceMetricDataFrameStage2) + 1, ] <- row
rawPerformanceMetricDataFrameStage2 <- rawPerformanceMetricDataFrameStage2Temp
#rawPerformanceMetricDataFrameStage2 <- rbind(rawPerformanceMetricDataFrameStage2, tempDataFrame)
}
}
}
rawPerformanceMetricDataFrameStage2Temp <- NULL
rowTimeValue <- NULL
rawPerformanceMetricValue <- NULL
splittedPerformanceMetricValue <- NULL
#plot(rawPerformanceMetricDataFrameStage0$time, rawPerformanceMetricDataFrameStage0$eng, type='l')
#-------------- Stage 0
rawPerformanceMetricDataFrameStage0 <- NULL
rawPerformanceMetricDataFrameStage0Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage0$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage0))
{
rawPerformanceMetricDataFrameStage0 <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
"lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
"int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedBandPowerValues[5]),
as.numeric(splittedBandPowerValues[6]),  as.numeric(splittedBandPowerValues[8]), as.numeric(splittedBandPowerValues[10]),
as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[14]));
rawPerformanceMetricDataFrameStage0Temp <- rawPerformanceMetricDataFrameStage0
rawPerformanceMetricDataFrameStage0Temp[nrow(rawPerformanceMetricDataFrameStage0) + 1, ] <- row
rawPerformanceMetricDataFrameStage0 <- rawPerformanceMetricDataFrameStage0Temp
}
}
}
#-------------- Stage 0
rawPerformanceMetricDataFrameStage0 <- NULL
rawPerformanceMetricDataFrameStage0Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage0$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage0))
{
rawPerformanceMetricDataFrameStage0 <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
"lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
"int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedBandPowerValues[5]),
as.numeric(splittedBandPowerValues[6]),  as.numeric(splittedBandPowerValues[8]), as.numeric(splittedBandPowerValues[10]),
as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[14]));
rawPerformanceMetricDataFrameStage0Temp <- rawPerformanceMetricDataFrameStage0
rawPerformanceMetricDataFrameStage0Temp[nrow(rawPerformanceMetricDataFrameStage0) + 1, ] <- row
rawPerformanceMetricDataFrameStage0 <- rawPerformanceMetricDataFrameStage0Temp
}
}
}
rawPerformanceMetricDataFrameStage0Temp <- NULL
rowTimeValue <- NULL
rawPerformanceMetricValue <- NULL
#-------------- Stage 0
rawPerformanceMetricDataFrameStage0 <- NULL
rawPerformanceMetricDataFrameStage0Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage0$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage0))
{
rawPerformanceMetricDataFrameStage0 <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
"lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
"int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedBandPowerValues[5]),
as.numeric(splittedBandPowerValues[6]),  as.numeric(splittedBandPowerValues[8]), as.numeric(splittedBandPowerValues[10]),
as.numeric(splittedBandPowerValues[12]), as.numeric(splittedBandPowerValues[14]));
rawPerformanceMetricDataFrameStage0Temp <- rawPerformanceMetricDataFrameStage0
rawPerformanceMetricDataFrameStage0Temp[nrow(rawPerformanceMetricDataFrameStage0) + 1, ] <- row
rawPerformanceMetricDataFrameStage0 <- rawPerformanceMetricDataFrameStage0Temp
}
}
}
#-------------- Stage 0
rawPerformanceMetricDataFrameStage0 <- NULL
rawPerformanceMetricDataFrameStage0Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage0$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage0))
{
rawPerformanceMetricDataFrameStage0 <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedPerformanceMetricValue[5])),
"lex" = c(as.numeric(splittedPerformanceMetricValue[6])), "str" = c(as.numeric(splittedPerformanceMetricValue[8])), "rel" = c(as.numeric(splittedPerformanceMetricValue[10])),
"int" = c(as.numeric(splittedPerformanceMetricValue[12])), "foc" = c(as.numeric(splittedPerformanceMetricValue[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedPerformanceMetricValue[5]),
as.numeric(splittedPerformanceMetricValue[6]),  as.numeric(splittedPerformanceMetricValue[8]), as.numeric(splittedPerformanceMetricValue[10]),
as.numeric(splittedPerformanceMetricValue[12]), as.numeric(splittedPerformanceMetricValue[14]));
rawPerformanceMetricDataFrameStage0Temp <- rawPerformanceMetricDataFrameStage0
rawPerformanceMetricDataFrameStage0Temp[nrow(rawPerformanceMetricDataFrameStage0) + 1, ] <- row
rawPerformanceMetricDataFrameStage0 <- rawPerformanceMetricDataFrameStage0Temp
}
}
}
rawPerformanceMetricDataFrameStage0Temp <- NULL
rowTimeValue <- NULL
rawPerformanceMetricValue <- NULL
splittedPerformanceMetricValue <- NULL
View(rawPerformanceMetricDataFrameStage0)
View(rawTrackingData)
#-------------- Stage 1
rawPerformanceMetricDataFrameStage1 <- NULL
rawPerformanceMetricDataFrameStage1Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage1)) {
rowTimeValue <- rawEmotivTrackingDataStage1$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage1$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage1))
{
rawPerformanceMetricDataFrameStage1 <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(rawPerformanceMetricValue[3])), "exc" = c(as.numeric(rawPerformanceMetricValue[5])),
"lex" = c(as.numeric(rawPerformanceMetricValue[6])), "str" = c(as.numeric(rawPerformanceMetricValue[8])), "rel" = c(as.numeric(rawPerformanceMetricValue[10])),
"int" = c(as.numeric(rawPerformanceMetricValue[12])), "foc" = c(as.numeric(rawPerformanceMetricValue[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(rawPerformanceMetricValue[3]), as.numeric(rawPerformanceMetricValue[5]),
as.numeric(rawPerformanceMetricValue[6]),  as.numeric(rawPerformanceMetricValue[8]), as.numeric(rawPerformanceMetricValue[10]),
as.numeric(rawPerformanceMetricValue[12]), as.numeric(rawPerformanceMetricValue[14]));
rawPerformanceMetricDataFrameStage1Temp <- rawPerformanceMetricDataFrameStage1
rawPerformanceMetricDataFrameStage1Temp[nrow(rawPerformanceMetricDataFrameStage1) + 1, ] <- row
rawPerformanceMetricDataFrameStage1 <- rawPerformanceMetricDataFrameStage1Temp
}
}
}
rawPerformanceMetricDataFrameStage1Temp <- NULL
rowTimeValue <- NULL
rawPerformanceMetricValue <- NULL
splittedPerformanceMetricValue <- NULL
#-------------- Stage 2
rawPerformanceMetricDataFrameStage2 <- NULL
rawPerformanceMetricDataFrameStage2Temp <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage2)) {
rowTimeValue <- rawEmotivTrackingDataStage2$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage2$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
if (is.null(rawPerformanceMetricDataFrameStage2))
{
rawPerformanceMetricDataFrameStage2 <- tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedPerformanceMetricValue[5])),
"lex" = c(as.numeric(splittedPerformanceMetricValue[6])), "str" = c(as.numeric(splittedPerformanceMetricValue[8])), "rel" = c(as.numeric(splittedPerformanceMetricValue[10])),
"int" = c(as.numeric(splittedPerformanceMetricValue[12])), "foc" = c(as.numeric(splittedPerformanceMetricValue[14])));
}
else
{
row <- c(as.numeric(rowTimeValue), as.numeric(splittedPerformanceMetricValue[3]), as.numeric(splittedPerformanceMetricValue[5]),
as.numeric(splittedPerformanceMetricValue[6]),  as.numeric(splittedPerformanceMetricValue[8]), as.numeric(splittedPerformanceMetricValue[10]),
as.numeric(splittedPerformanceMetricValue[12]), as.numeric(splittedPerformanceMetricValue[14]));
rawPerformanceMetricDataFrameStage2Temp <- rawPerformanceMetricDataFrameStage2
rawPerformanceMetricDataFrameStage2Temp[nrow(rawPerformanceMetricDataFrameStage2) + 1, ] <- row
rawPerformanceMetricDataFrameStage2 <- rawPerformanceMetricDataFrameStage2Temp
#rawPerformanceMetricDataFrameStage2 <- rbind(rawPerformanceMetricDataFrameStage2, tempDataFrame)
}
}
}
rawPerformanceMetricDataFrameStage2Temp <- NULL
rowTimeValue <- NULL
rawPerformanceMetricValue <- NULL
splittedPerformanceMetricValue <- NULL
plot(rawPerformanceMetricDataFrameStage0$time, rawPerformanceMetricDataFrameStage0$eng, type='l')
