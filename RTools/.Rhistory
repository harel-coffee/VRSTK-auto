}
View(rawBandPowerDataFrameStage0)
View(rawBandPowerDataFrameStage0)
View(uncannyValleyAnswersFilteredData)
View(rawEmotivTrackingDataStage0)
rawPerformanceMetricDataFrameStage0 <- NULL
for(i in 1:nrow(rawEmotivTrackingDataStage0)) {
rowTimeValue <- rawEmotivTrackingDataStage0$time[i]
rawPerformanceMetricValue <- rawEmotivTrackingDataStage0$PerformanceMetricsDataMessage_CortexBrainComputerInterface[i]
if (!is.null(rawPerformanceMetricValue) && !is.na(rawPerformanceMetricValue) && !is.nan(rawPerformanceMetricValue) && length(rawPerformanceMetricValue) && rawPerformanceMetricValue != "")
{
splittedPerformanceMetricValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
splittedPerformanceMetricValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
"lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
"int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
if (is.null(rawPerformanceMetricDataFrameStage0))
{
rawPerformanceMetricDataFrameStage0 <- tempDataFrame
}
else
{
rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
}
}
}
View(rawPerformanceMetricDataFrameStage0)
View(rawTrackingData)
View(rawBitalinoDataStage0)
View(rawBitalinoDataStage1)
rawBitalinoDataStage0 <- rawTrackingData$Stage0$`BItalinoTracker-3942`;
rawBitalinoDataStage1 <- rawTrackingData$Stage1$`BItalinoTracker-3942`;
rawBitalinoDataStage2 <- rawTrackingData$Stage2$`BItalinoTracker-3942`;
rawBitalinoDataStage1 <- rawTrackingData$Stage1$`BItalinoTracker-3942`;
View(rawTrackingData)
View(rawBitalinoDataStage0)
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(TransferedValue, "[", " ")
splittedTransferedValue <- stringr::str_replace(TransferedValue, "]", " ")
splittedTransferedValue <- stringr::str_replace(TransferedValue, ",", ".")
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "]", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[2]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "]", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "]", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "[", " ")
#splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "]", " ")
#splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\[", " ")
#splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\]", " ")
#splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\]", " ")
#splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\]", " ")
#splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
splittedSecondValue <- stringr::str_split(splittedTransferedValue, " ")[[1]]
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\]", " ")
#splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, ",", ".")
splittedSecondValue <- stringr::str_split(splittedTransferedValue, " ")[[2]]
#tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "eng" = c(as.numeric(splittedPerformanceMetricValue[3])), "exc" = c(as.numeric(splittedBandPowerValues[5])),
#                            "lex" = c(as.numeric(splittedBandPowerValues[6])), "str" = c(as.numeric(splittedBandPowerValues[8])), "rel" = c(as.numeric(splittedBandPowerValues[10])),
#                            "int" = c(as.numeric(splittedBandPowerValues[12])), "foc" = c(as.numeric(splittedBandPowerValues[14])));
#if (is.null(rawPerformanceMetricDataFrameStage0))
#{
#  rawPerformanceMetricDataFrameStage0 <- tempDataFrame
#}
#else
#{
#  rawPerformanceMetricDataFrameStage0 <- rbind(rawPerformanceMetricDataFrameStage0, tempDataFrame)
#}
}
}
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\]", " ")
splittedSecondValue <- stringr::str_split(splittedTransferedValue, " ")[[2]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "EDA(mOhm)" = c(as.numeric(splittedPerformanceMetricValue[3])), "ECG(mV)" = c(as.numeric(splittedBandPowerValues[5])));
if (is.null(rawTransferedBitalinoDataFrameStage0))
{
rawTransferedBitalinoDataFrameStage0 <- tempDataFrame
}
else
{
rawTransferedBitalinoDataFrameStage0 <- rbind(rawTransferedBitalinoDataFrameStage0, tempDataFrame)
}
}
}
View(rawTransferedBitalinoDataFrameStage0)
splittedSecondValue <- stringr::str_split(splittedTransferedValue, " ")[[2]]
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\]", " ")
splittedSecondValue <- stringr::str_split(splittedTransferedValue, " ")[[2]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "EDA\\(mOhm\\)" = c(as.numeric(splittedSecondValue[3])), "ECG\\(mV\\)" = c(as.numeric(splittedSecondValue[4])));
if (is.null(rawTransferedBitalinoDataFrameStage0))
{
rawTransferedBitalinoDataFrameStage0 <- tempDataFrame
}
else
{
rawTransferedBitalinoDataFrameStage0 <- rbind(rawTransferedBitalinoDataFrameStage0, tempDataFrame)
}
}
}
View(rawTransferedBitalinoDataFrameStage0)
View(rawBandPowerDataFrameStage0)
rawTransferedBitalinoDataFrameStage0 <- NULL
for(i in 1:nrow(rawBitalinoDataStage0)) {
rowTimeValue <- rawBitalinoDataStage0$time[i]
rowTransferedValue <- rawBitalinoDataStage0$`_transferedReceivedMessage_TrackingBitalinoWithOSC`[i]
if (!is.null(rowTransferedValue) && !is.na(rowTransferedValue) && !is.nan(rowTransferedValue) && length(rowTransferedValue) && rowTransferedValue != "")
{
splittedTransferedValue <- stringr::str_split(rowTransferedValue, ";")[[1]]
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\[", " ")
splittedTransferedValue <- stringr::str_replace(splittedTransferedValue, "\\]", " ")
splittedSecondValue <- stringr::str_split(splittedTransferedValue, " ")[[2]]
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "EDA in mOhm" = c(as.numeric(splittedSecondValue[3])), "ECG in mV" = c(as.numeric(splittedSecondValue[4])));
if (is.null(rawTransferedBitalinoDataFrameStage0))
{
rawTransferedBitalinoDataFrameStage0 <- tempDataFrame
}
else
{
rawTransferedBitalinoDataFrameStage0 <- rbind(rawTransferedBitalinoDataFrameStage0, tempDataFrame)
}
}
}
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/8-5_22-42-16.json')
library(psych)
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/8-5_22-42-16.json')
View(rawTrackingData)
rawQualityParametersPages28114Stage1 <- rawTrackingData[["Stage1"]][["Pages28114"]]
View(rawQualityParametersPages28114Stage1)
rawQualityParametersPages28114DataFrameStage1 <- NULL
for(i in 1:nrow(rawQualityParametersPages28114Stage1)) {
rowTimeValue <- rawQualityParametersPages28114Stage1$time[i]
rawQualityParametersValue <- rawQualityParametersPages28114Stage1$ParametersAsMessage_PagesParameters[i]
if (!is.null(rawQualityParametersValue) && !is.na(rawQualityParametersValue) && !is.nan(rawQualityParametersValue) && length(rawQualityParametersValue) && rawQualityParametersValue != "")
{
splittedQualityParametersValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
#splittedQualityParametersValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
splittedSTARTED <- stringr::str_split(splittedQualityParametersValue[1], ":")[[1]]
degTimeLowQuality <- FALSE
if(splittedQualityParametersValue[11] == "true")
degTimeLowQuality <- TRUE
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "STARTED" = c(splittedSTARTED[2]), "LASTDATA" = c(splittedQualityParametersValue[2]),
"LASTPAGE" = c(as.numeric(splittedQualityParametersValue[3])), "MAXPAGE" = c(as.numeric(splittedQualityParametersValue[4])),
"FINISHED" = c(as.numeric(splittedQualityParametersValue[5])), "TIME_SUM" = c(as.numeric(splittedQualityParametersValue[6])),
"TIME_RSI" = c(as.numeric(splittedQualityParametersValue[7])), "MISSING" = c(as.numeric(splittedQualityParametersValue[8])),
"DEG_TIME" = c(as.numeric(splittedQualityParametersValue[9])), "DegTimeThreshold" = c(as.numeric(splittedQualityParametersValue[10])),
"DegTimeLowQuality" = c(degTimeLowQuality), "DegTimeThresholdForOnePage" = c(as.numeric(splittedQualityParametersValue[12])),
"DegTimeValueForOnePage" = c(as.numeric(splittedQualityParametersValue[13])), "StandardDeviationStraightLineAnswer" = c(as.numeric(splittedQualityParametersValue[14])),
"AbsoluteDerivationOfResponseValue" = c(as.numeric(splittedQualityParametersValue[15])));
if (is.null(rawQualityParametersPages28114DataFrameStage1))
{
rawQualityParametersPages28114DataFrameStage1 <- tempDataFrame
}
else
{
rawQualityParametersPages28114DataFrameStage1 <- rbind(rawQualityParametersPages28114DataFrameStage1, tempDataFrame)
}
}
}
rawQualityParametersPages28114DataFrameStage1 <- NULL
for(i in 1:nrow(rawQualityParametersPages28114Stage1)) {
rowTimeValue <- rawQualityParametersPages28114Stage1$time[i]
rawQualityParametersValue <- rawQualityParametersPages28114Stage1$ParametersAsMessage_PagesParameters[i]
if (!is.null(rawQualityParametersValue) && !is.na(rawQualityParametersValue) && !is.nan(rawQualityParametersValue) && length(rawQualityParametersValue) && rawQualityParametersValue != "")
{
splittedQualityParametersValue <- stringr::str_split(rawPerformanceMetricValue, ";")[[1]]
#splittedQualityParametersValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
splittedSTARTED <- stringr::str_split(splittedQualityParametersValue[1], ":")[[1]]
degTimeLowQuality <- FALSE
if(splittedQualityParametersValue[11] == "true")
{
degTimeLowQuality <- TRUE
}
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "STARTED" = c(splittedSTARTED[2]), "LASTDATA" = c(splittedQualityParametersValue[2]),
"LASTPAGE" = c(as.numeric(splittedQualityParametersValue[3])), "MAXPAGE" = c(as.numeric(splittedQualityParametersValue[4])),
"FINISHED" = c(as.numeric(splittedQualityParametersValue[5])), "TIME_SUM" = c(as.numeric(splittedQualityParametersValue[6])),
"TIME_RSI" = c(as.numeric(splittedQualityParametersValue[7])), "MISSING" = c(as.numeric(splittedQualityParametersValue[8])),
"DEG_TIME" = c(as.numeric(splittedQualityParametersValue[9])), "DegTimeThreshold" = c(as.numeric(splittedQualityParametersValue[10])),
"DegTimeLowQuality" = c(degTimeLowQuality), "DegTimeThresholdForOnePage" = c(as.numeric(splittedQualityParametersValue[12])),
"DegTimeValueForOnePage" = c(as.numeric(splittedQualityParametersValue[13])), "StandardDeviationStraightLineAnswer" = c(as.numeric(splittedQualityParametersValue[14])),
"AbsoluteDerivationOfResponseValue" = c(as.numeric(splittedQualityParametersValue[15])));
if (is.null(rawQualityParametersPages28114DataFrameStage1))
{
rawQualityParametersPages28114DataFrameStage1 <- tempDataFrame
}
else
{
rawQualityParametersPages28114DataFrameStage1 <- rbind(rawQualityParametersPages28114DataFrameStage1, tempDataFrame)
}
}
}
View(rawQualityParametersPages28114DataFrameStage1)
rawQualityParametersPages28114DataFrameStage1 <- NULL
for(i in 1:nrow(rawQualityParametersPages28114Stage1)) {
rowTimeValue <- rawQualityParametersPages28114Stage1$time[i]
rawQualityParametersValue <- rawQualityParametersPages28114Stage1$ParametersAsMessage_PagesParameters[i]
if (!is.null(rawQualityParametersValue) && !is.na(rawQualityParametersValue) && !is.nan(rawQualityParametersValue) && length(rawQualityParametersValue) && rawQualityParametersValue != "")
{
splittedQualityParametersValue <- stringr::str_split(rawQualityParametersValue, ";")[[1]]
#splittedQualityParametersValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
splittedSTARTED <- stringr::str_split(splittedQualityParametersValue[1], ":")[[1]]
degTimeLowQuality <- FALSE
if(splittedQualityParametersValue[11] == "true")
{
degTimeLowQuality <- TRUE
}
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "STARTED" = c(splittedSTARTED[2]), "LASTDATA" = c(splittedQualityParametersValue[2]),
"LASTPAGE" = c(as.numeric(splittedQualityParametersValue[3])), "MAXPAGE" = c(as.numeric(splittedQualityParametersValue[4])),
"FINISHED" = c(as.numeric(splittedQualityParametersValue[5])), "TIME_SUM" = c(as.numeric(splittedQualityParametersValue[6])),
"TIME_RSI" = c(as.numeric(splittedQualityParametersValue[7])), "MISSING" = c(as.numeric(splittedQualityParametersValue[8])),
"DEG_TIME" = c(as.numeric(splittedQualityParametersValue[9])), "DegTimeThreshold" = c(as.numeric(splittedQualityParametersValue[10])),
"DegTimeLowQuality" = c(degTimeLowQuality), "DegTimeThresholdForOnePage" = c(as.numeric(splittedQualityParametersValue[12])),
"DegTimeValueForOnePage" = c(as.numeric(splittedQualityParametersValue[13])), "StandardDeviationStraightLineAnswer" = c(as.numeric(splittedQualityParametersValue[14])),
"AbsoluteDerivationOfResponseValue" = c(as.numeric(splittedQualityParametersValue[15])));
if (is.null(rawQualityParametersPages28114DataFrameStage1))
{
rawQualityParametersPages28114DataFrameStage1 <- tempDataFrame
}
else
{
rawQualityParametersPages28114DataFrameStage1 <- rbind(rawQualityParametersPages28114DataFrameStage1, tempDataFrame)
}
}
}
View(rawQualityParametersPages28114DataFrameStage1)
rawQualityParametersPages28114DataFrameStage1 <- NULL
for(i in 1:nrow(rawQualityParametersPages28114Stage1)) {
rowTimeValue <- rawQualityParametersPages28114Stage1$time[i]
rawQualityParametersValue <- rawQualityParametersPages28114Stage1$ParametersAsMessage_PagesParameters[i]
if (!is.null(rawQualityParametersValue) && !is.na(rawQualityParametersValue) && !is.nan(rawQualityParametersValue) && length(rawQualityParametersValue) && rawQualityParametersValue != "")
{
splittedQualityParametersValue <- stringr::str_split(rawQualityParametersValue, ";")[[1]]
#splittedQualityParametersValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
splittedSTARTED <- stringr::str_split(splittedQualityParametersValue[1], " ")[[1]]
splittedSTARTED <- splittedSTARTED[2] + " " + splittedSTARTED[3] + " " + splittedSTARTED[4]
degTimeLowQuality <- FALSE
if(splittedQualityParametersValue[11] == "True")
{
degTimeLowQuality <- TRUE
}
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "STARTED" = c(splittedSTARTED), "LASTDATA" = c(splittedQualityParametersValue[2]),
"LASTPAGE" = c(as.numeric(splittedQualityParametersValue[3])), "MAXPAGE" = c(as.numeric(splittedQualityParametersValue[4])),
"FINISHED" = c(as.numeric(splittedQualityParametersValue[5])), "TIME_SUM" = c(as.numeric(splittedQualityParametersValue[6])),
"TIME_RSI" = c(as.numeric(splittedQualityParametersValue[7])), "MISSING" = c(as.numeric(splittedQualityParametersValue[8])),
"DEG_TIME" = c(as.numeric(splittedQualityParametersValue[9])), "DegTimeThreshold" = c(as.numeric(splittedQualityParametersValue[10])),
"DegTimeLowQuality" = c(degTimeLowQuality), "DegTimeThresholdForOnePage" = c(as.numeric(splittedQualityParametersValue[12])),
"DegTimeValueForOnePage" = c(as.numeric(splittedQualityParametersValue[13])), "StandardDeviationStraightLineAnswer" = c(as.numeric(splittedQualityParametersValue[14])),
"AbsoluteDerivationOfResponseValue" = c(as.numeric(splittedQualityParametersValue[15])));
if (is.null(rawQualityParametersPages28114DataFrameStage1))
{
rawQualityParametersPages28114DataFrameStage1 <- tempDataFrame
}
else
{
rawQualityParametersPages28114DataFrameStage1 <- rbind(rawQualityParametersPages28114DataFrameStage1, tempDataFrame)
}
}
}
rawQualityParametersPages28114DataFrameStage1 <- NULL
for(i in 1:nrow(rawQualityParametersPages28114Stage1)) {
rowTimeValue <- rawQualityParametersPages28114Stage1$time[i]
rawQualityParametersValue <- rawQualityParametersPages28114Stage1$ParametersAsMessage_PagesParameters[i]
if (!is.null(rawQualityParametersValue) && !is.na(rawQualityParametersValue) && !is.nan(rawQualityParametersValue) && length(rawQualityParametersValue) && rawQualityParametersValue != "")
{
splittedQualityParametersValue <- stringr::str_split(rawQualityParametersValue, ";")[[1]]
#splittedQualityParametersValue <- stringr::str_replace(splittedPerformanceMetricValue, ",", ".")
splittedSTARTED <- stringr::str_split(splittedQualityParametersValue[1], " ")[[1]]
splittedSTARTED <- paste(splittedSTARTED[2], splittedSTARTED[3], splittedSTARTED[4])
degTimeLowQuality <- FALSE
if(splittedQualityParametersValue[11] == "True")
{
degTimeLowQuality <- TRUE
}
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "STARTED" = c(splittedSTARTED), "LASTDATA" = c(splittedQualityParametersValue[2]),
"LASTPAGE" = c(as.numeric(splittedQualityParametersValue[3])), "MAXPAGE" = c(as.numeric(splittedQualityParametersValue[4])),
"FINISHED" = c(as.numeric(splittedQualityParametersValue[5])), "TIME_SUM" = c(as.numeric(splittedQualityParametersValue[6])),
"TIME_RSI" = c(as.numeric(splittedQualityParametersValue[7])), "MISSING" = c(as.numeric(splittedQualityParametersValue[8])),
"DEG_TIME" = c(as.numeric(splittedQualityParametersValue[9])), "DegTimeThreshold" = c(as.numeric(splittedQualityParametersValue[10])),
"DegTimeLowQuality" = c(degTimeLowQuality), "DegTimeThresholdForOnePage" = c(as.numeric(splittedQualityParametersValue[12])),
"DegTimeValueForOnePage" = c(as.numeric(splittedQualityParametersValue[13])), "StandardDeviationStraightLineAnswer" = c(as.numeric(splittedQualityParametersValue[14])),
"AbsoluteDerivationOfResponseValue" = c(as.numeric(splittedQualityParametersValue[15])));
if (is.null(rawQualityParametersPages28114DataFrameStage1))
{
rawQualityParametersPages28114DataFrameStage1 <- tempDataFrame
}
else
{
rawQualityParametersPages28114DataFrameStage1 <- rbind(rawQualityParametersPages28114DataFrameStage1, tempDataFrame)
}
}
}
View(rawQualityParametersPages28114DataFrameStage1)
rawQualityParametersPages28114DataFrameStage1 <- NULL
for(i in 1:nrow(rawQualityParametersPages28114Stage1)) {
rowTimeValue <- rawQualityParametersPages28114Stage1$time[i]
rawQualityParametersValue <- rawQualityParametersPages28114Stage1$ParametersAsMessage_PagesParameters[i]
if (!is.null(rawQualityParametersValue) && !is.na(rawQualityParametersValue) && !is.nan(rawQualityParametersValue) && length(rawQualityParametersValue) && rawQualityParametersValue != "")
{
splittedQualityParametersValue <- stringr::str_split(rawQualityParametersValue, ";")[[1]]
splittedSTARTED <- stringr::str_split(splittedQualityParametersValue[1], " ")[[1]]
splittedSTARTED <- paste(splittedSTARTED[2], splittedSTARTED[3], splittedSTARTED[4])
degTimeLowQuality <- FALSE
if(splittedQualityParametersValue[11] == "True")
{
degTimeLowQuality <- TRUE
}
tempDataFrame <- data.frame("time" = c(as.numeric(rowTimeValue)), "STARTED" = c(splittedSTARTED), "LASTDATA" = c(splittedQualityParametersValue[2]),
"LASTPAGE" = c(as.numeric(splittedQualityParametersValue[3])), "MAXPAGE" = c(as.numeric(splittedQualityParametersValue[4])),
"FINISHED" = c(as.numeric(splittedQualityParametersValue[5])), "TIME_SUM" = c(as.numeric(splittedQualityParametersValue[6])),
"TIME_RSI" = c(as.numeric(splittedQualityParametersValue[7])), "MISSING" = c(as.numeric(splittedQualityParametersValue[8])),
"DEG_TIME" = c(as.numeric(splittedQualityParametersValue[9])), "DegTimeThreshold" = c(as.numeric(splittedQualityParametersValue[10])),
"DegTimeLowQuality" = c(degTimeLowQuality), "DegTimeThresholdForOnePage" = c(as.numeric(splittedQualityParametersValue[12])),
"DegTimeValueForOnePage" = c(as.numeric(splittedQualityParametersValue[13])), "CurrentPageNumber" = c(as.numeric(splittedQualityParametersValue[14])),
"StandardDeviationStraightLineAnswer" = c(as.numeric(splittedQualityParametersValue[15])), "AbsoluteDerivationOfResponseValue" = c(as.numeric(splittedQualityParametersValue[16])));
if (is.null(rawQualityParametersPages28114DataFrameStage1))
{
rawQualityParametersPages28114DataFrameStage1 <- tempDataFrame
}
else
{
rawQualityParametersPages28114DataFrameStage1 <- rbind(rawQualityParametersPages28114DataFrameStage1, tempDataFrame)
}
}
}
