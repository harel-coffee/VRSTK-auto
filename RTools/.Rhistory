source("~/GitHub/VRSTK/RTools/ImportQuestionnaireCsv.R")
str(uncannyValleyAnswersRawData)
summary(uncannyValleyAnswersRawData)
summary(q1_Lloid)
summary(objects)
summary(objects[0])
#summary(objects[0])
objects
#summary(objects[0])
uncannyValleyAnswersRawData.df[3:9]
#summary(objects[0])
#uncannyValleyAnswersRawData.df[3:9]
class(uncannyValleyAnswersRawData.df)
#summary(objects[0])
uncannyValleyAnswersRawData[3:9]
#str(uncannyValleyAnswersRawData)
#summary(objects[0])
uncannyValleyAnswersSubset <- uncannyValleyAnswersRawData[3:9]
#class(uncannyValleyAnswersRawData.df)
summary(uncannyValleyAnswersSubset)
#class(uncannyValleyAnswersRawData.df)
t(uncannyValleyAnswersSubset)
#class(uncannyValleyAnswersRawData.df)
uncannyValleyAnswersSubsetTrasponiert = t(uncannyValleyAnswersSubset)
View(uncannyValleyAnswersSubsetTrasponiert)
summary(uncannyValleyAnswersSubsetTrasponiert)
View(uncannyValleyAnswersSubset)
View(uncannyValleyAnswersSubsetTrasponiert)
View(uncannyValleyAnswersSubsetTrasponiert)
View(uncannyValleyAnswersSubsetTrasponiert)
uncannyValleyAnswersSubsetTrasponiert[1:]
uncannyValleyAnswersSubsetTrasponiert[1, ]
View(uncannyValleyAnswersSubsetTrasponiert)
uncannyValleyAnswersSubsetTrasponiert[2:7, ]
summary(uncannyValleyAnswersSubsetTrasponiert[2:7, ])
summary(as.numeric(uncannyValleyAnswersSubsetTrasponiert[2:7, ]))
summary(as.numeric(uncannyValleyAnswersSubsetTrasponiert[2:7, 1]))
uncannyValleyAnswersSubsetTrasponiert[2:7, 1]
#uncannyValleyAnswersSubsetTrasponiert[2:7, 1]
#summary(as.numeric(uncannyValleyAnswersSubsetTrasponiert[2:7, 1]))
#uncannyValleyAnswersSubsetTrasponiert[2:7, 1]
#summary(as.numeric(uncannyValleyAnswersSubsetTrasponiert[2:7, 1]))
uncannyValleyAnswersSubsetTrasponiertRenamed <- uncannyValleyAnswersSubsetTrasponiert
View(uncannyValleyAnswersSubsetTrasponiertRenamed)
names(uncannyValleyAnswersSubsetTrasponiertRenamed)
View(uncannyValleyAnswersSubsetTrasponiertRenamed)
#names(uncannyValleyAnswersSubsetTrasponiertRenamed)
uncannyValleyAnswersSubsetTrasponiertRenamed[1, ]
#names(uncannyValleyAnswersSubsetTrasponiertRenamed)
rownames(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
#names(uncannyValleyAnswersSubsetTrasponiertRenamed)
rownames(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
#names(uncannyValleyAnswersSubsetTrasponiertRenamed)
rownames(uncannyValleyAnswersSubsetTrasponiertRenamed)
#names(uncannyValleyAnswersSubsetTrasponiertRenamed)
colnames(uncannyValleyAnswersSubsetTrasponiertRenamed)
#names(uncannyValleyAnswersSubsetTrasponiertRenamed)
colnames(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
#names(uncannyValleyAnswersSubsetTrasponiertRenamed)
#colnames(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
colnames(uncannyValleyAnswersSubsetTrasponiertRenamed)<-unlist(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
View(uncannyValleyAnswersSubsetTrasponiertRenamed)
uncannyValleyAnswersFilteredData <- uncannyValleyAnswersSubsetTrasponiertRenamed[!uncannyValleyAnswersSubsetTrasponiertRenamed[1, ],]
View(uncannyValleyAnswersSubset)
uncannyValleyAnswersFilteredData <- uncannyValleyAnswersSubsetTrasponiertRenamed[!row.names(uncannyValleyAnswersSubsetTrasponiertRenamed)=='QuestionID', ]
View(uncannyValleyAnswersFilteredData)
summary(uncannyValleyAnswersFilteredData)
summary(as.numeric(uncannyValleyAnswersFilteredData))
View(uncannyValleyAnswersFilteredData)
summary(as.numeric(uncannyValleyAnswersFilteredData[1]))
# rename columns to the first rows values, delete the first row and make a copy
colnames(uncannyValleyAnswersSubsetTrasponiertRenamed)<-unlist(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
#summary(as.numeric(uncannyValleyAnswersFilteredData[1]))
#summary(as.numeric(uncannyValleyAnswersFilteredData[1]))
# descriptive statistic
uncannyValleyAnswersFilteredData[1]
View(uncannyValleyAnswersFilteredData)
View(uncannyValleyAnswersFilteredData)
View(uncannyValleyAnswersFilteredData)
# descriptive statistic
uncannyValleyAnswersFilteredData[1:]
# descriptive statistic
uncannyValleyAnswersFilteredData[c(1,)]
# descriptive statistic
uncannyValleyAnswersFilteredData[c(1)]
# descriptive statistic
length(uncannyValleyAnswersFilteredData[c(1)])
# descriptive statistic
length(uncannyValleyAnswersFilteredData[c()])
# descriptive statistic
length(uncannyValleyAnswersFilteredData[-1])
View(uncannyValleyAnswersFilteredData)
# descriptive statistic
print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
uncannyValleyAnswersFilteredData[c("q1_Lloid")]
# descriptive statistic
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
uncannyValleyAnswersFilteredData$q1_Lloid
# descriptive statistic
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
nrow(uncannyValleyAnswersFilteredData)
# descriptive statistic
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
nrow(uncannyValleyAnswersFilteredData[c("q1_Lloid")])
# descriptive statistic
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
nrow(uncannyValleyAnswersFilteredData["q1_Lloid"])
# descriptive statistic
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
# descriptive statistic
uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
View(uncannyValleyAnswersFilteredData)
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
View(uncannyValleyAnswersFilteredData)
View(uncannyValleyAnswersSubsetTrasponiert)
View(uncannyValleyAnswersFilteredData)
# descriptive statistic
uncannyValleyAnswersFilteredData[1:6, 1]
# descriptive statistic
uncannyValleyAnswersFilteredData[1:6, 2]
# descriptive statistic
uncannyValleyAnswersFilteredData[0:6, 2]
# descriptive statistic
uncannyValleyAnswersFilteredData <- data.frame(uncannyValleyAnswersFilteredData[0:6, 1], uncannyValleyAnswersFilteredData[0:6, 2], uncannyValleyAnswersFilteredData[0:6, 3],
uncannyValleyAnswersFilteredData[0:6, 4], uncannyValleyAnswersFilteredData[0:6, 5], uncannyValleyAnswersFilteredData[0:6, 6],
uncannyValleyAnswersFilteredData[0:6, 7], uncannyValleyAnswersFilteredData[0:6, 8], uncannyValleyAnswersFilteredData[0:6, 9],
uncannyValleyAnswersFilteredData[0:6, 10], uncannyValleyAnswersFilteredData[0:6, 11], uncannyValleyAnswersFilteredData[0:6, 12]
, uncannyValleyAnswersFilteredData[0:6, 13], uncannyValleyAnswersFilteredData[0:6, 14], uncannyValleyAnswersFilteredData[0:6, 15]
, uncannyValleyAnswersFilteredData[0:6, 16], uncannyValleyAnswersFilteredData[0:6, 17], uncannyValleyAnswersFilteredData[0:6, 18]
, uncannyValleyAnswersFilteredData[0:6, 19], uncannyValleyAnswersFilteredData[0:6, 20], uncannyValleyAnswersFilteredData[0:6, 21]
, uncannyValleyAnswersFilteredData[0:6, 22], uncannyValleyAnswersFilteredData[0:6, 23], uncannyValleyAnswersFilteredData[0:6, 24]
, uncannyValleyAnswersFilteredData[0:6, 25], uncannyValleyAnswersFilteredData[0:6, 26], uncannyValleyAnswersFilteredData[0:6, 27]
, uncannyValleyAnswersFilteredData[0:6, 28], uncannyValleyAnswersFilteredData[0:6, 29], uncannyValleyAnswersFilteredData[0:6, 30]
, uncannyValleyAnswersFilteredData[0:6, 31], uncannyValleyAnswersFilteredData[0:6, 32], uncannyValleyAnswersFilteredData[0:6, 33]
, uncannyValleyAnswersFilteredData[0:6, 34], uncannyValleyAnswersFilteredData[0:6, 35], uncannyValleyAnswersFilteredData[0:6, 36]
, uncannyValleyAnswersFilteredData[0:6, 37], uncannyValleyAnswersFilteredData[0:6, 38], uncannyValleyAnswersFilteredData[0:6, 39]
, uncannyValleyAnswersFilteredData[0:6, 40], uncannyValleyAnswersFilteredData[0:6, 41], uncannyValleyAnswersFilteredData[0:6, 42]
, uncannyValleyAnswersFilteredData[0:6, 43], uncannyValleyAnswersFilteredData[0:6, 44], uncannyValleyAnswersFilteredData[0:6, 45]
, uncannyValleyAnswersFilteredData[0:6, 46], uncannyValleyAnswersFilteredData[0:6, 47], uncannyValleyAnswersFilteredData[0:6, 48])
View(uncannyValleyAnswersFilteredData)
colnames(uncannyValleyAnswersFilteredData)<-unlist(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
View(uncannyValleyAnswersFilteredData)
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
#nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
summary(uncannyValleyAnswersFilteredData[1])
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
#nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
summary(uncannyValleyAnswersFilteredData)
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
#nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
summary(as.numeric(uncannyValleyAnswersFilteredData[1]))
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
#nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
uncannyValleyAnswersFilteredData[1]
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
#nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
uncannyValleyAnswersFilteredData[2]
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
#nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
uncannyValleyAnswersFilteredData[2] <- as.numeric(uncannyValleyAnswersFilteredData[2])
uncannyValleyAnswersFilteredData <- as.numeric(uncannyValleyAnswersFilteredData)
test  <- as.numeric(uncannyValleyAnswersFilteredData[0:6, 1])
# create data frame
uncannyValleyAnswersFilteredData <- data.frame(as.numeric(uncannyValleyAnswersFilteredData[0:6, 1]), uncannyValleyAnswersFilteredData[0:6, 2], uncannyValleyAnswersFilteredData[0:6, 3],
uncannyValleyAnswersFilteredData[0:6, 4], uncannyValleyAnswersFilteredData[0:6, 5], uncannyValleyAnswersFilteredData[0:6, 6],
uncannyValleyAnswersFilteredData[0:6, 7], uncannyValleyAnswersFilteredData[0:6, 8], uncannyValleyAnswersFilteredData[0:6, 9],
uncannyValleyAnswersFilteredData[0:6, 10], uncannyValleyAnswersFilteredData[0:6, 11], uncannyValleyAnswersFilteredData[0:6, 12]
, uncannyValleyAnswersFilteredData[0:6, 13], uncannyValleyAnswersFilteredData[0:6, 14], uncannyValleyAnswersFilteredData[0:6, 15]
, uncannyValleyAnswersFilteredData[0:6, 16], uncannyValleyAnswersFilteredData[0:6, 17], uncannyValleyAnswersFilteredData[0:6, 18]
, uncannyValleyAnswersFilteredData[0:6, 19], uncannyValleyAnswersFilteredData[0:6, 20], uncannyValleyAnswersFilteredData[0:6, 21]
, uncannyValleyAnswersFilteredData[0:6, 22], uncannyValleyAnswersFilteredData[0:6, 23], uncannyValleyAnswersFilteredData[0:6, 24]
, uncannyValleyAnswersFilteredData[0:6, 25], uncannyValleyAnswersFilteredData[0:6, 26], uncannyValleyAnswersFilteredData[0:6, 27]
, uncannyValleyAnswersFilteredData[0:6, 28], uncannyValleyAnswersFilteredData[0:6, 29], uncannyValleyAnswersFilteredData[0:6, 30]
, uncannyValleyAnswersFilteredData[0:6, 31], uncannyValleyAnswersFilteredData[0:6, 32], uncannyValleyAnswersFilteredData[0:6, 33]
, uncannyValleyAnswersFilteredData[0:6, 34], uncannyValleyAnswersFilteredData[0:6, 35], uncannyValleyAnswersFilteredData[0:6, 36]
, uncannyValleyAnswersFilteredData[0:6, 37], uncannyValleyAnswersFilteredData[0:6, 38], uncannyValleyAnswersFilteredData[0:6, 39]
, uncannyValleyAnswersFilteredData[0:6, 40], uncannyValleyAnswersFilteredData[0:6, 41], uncannyValleyAnswersFilteredData[0:6, 42]
, uncannyValleyAnswersFilteredData[0:6, 43], uncannyValleyAnswersFilteredData[0:6, 44], uncannyValleyAnswersFilteredData[0:6, 45]
, uncannyValleyAnswersFilteredData[0:6, 46], uncannyValleyAnswersFilteredData[0:6, 47], uncannyValleyAnswersFilteredData[0:6, 48])
View(uncannyValleyAnswersFilteredData)
# create data frame
uncannyValleyAnswersFilteredData <- data.frame(uncannyValleyAnswersFilteredData[0:6, 1], uncannyValleyAnswersFilteredData[0:6, 2], uncannyValleyAnswersFilteredData[0:6, 3],
uncannyValleyAnswersFilteredData[0:6, 4], uncannyValleyAnswersFilteredData[0:6, 5], uncannyValleyAnswersFilteredData[0:6, 6],
uncannyValleyAnswersFilteredData[0:6, 7], uncannyValleyAnswersFilteredData[0:6, 8], uncannyValleyAnswersFilteredData[0:6, 9],
uncannyValleyAnswersFilteredData[0:6, 10], uncannyValleyAnswersFilteredData[0:6, 11], uncannyValleyAnswersFilteredData[0:6, 12]
, uncannyValleyAnswersFilteredData[0:6, 13], uncannyValleyAnswersFilteredData[0:6, 14], uncannyValleyAnswersFilteredData[0:6, 15]
, uncannyValleyAnswersFilteredData[0:6, 16], uncannyValleyAnswersFilteredData[0:6, 17], uncannyValleyAnswersFilteredData[0:6, 18]
, uncannyValleyAnswersFilteredData[0:6, 19], uncannyValleyAnswersFilteredData[0:6, 20], uncannyValleyAnswersFilteredData[0:6, 21]
, uncannyValleyAnswersFilteredData[0:6, 22], uncannyValleyAnswersFilteredData[0:6, 23], uncannyValleyAnswersFilteredData[0:6, 24]
, uncannyValleyAnswersFilteredData[0:6, 25], uncannyValleyAnswersFilteredData[0:6, 26], uncannyValleyAnswersFilteredData[0:6, 27]
, uncannyValleyAnswersFilteredData[0:6, 28], uncannyValleyAnswersFilteredData[0:6, 29], uncannyValleyAnswersFilteredData[0:6, 30]
, uncannyValleyAnswersFilteredData[0:6, 31], uncannyValleyAnswersFilteredData[0:6, 32], uncannyValleyAnswersFilteredData[0:6, 33]
, uncannyValleyAnswersFilteredData[0:6, 34], uncannyValleyAnswersFilteredData[0:6, 35], uncannyValleyAnswersFilteredData[0:6, 36]
, uncannyValleyAnswersFilteredData[0:6, 37], uncannyValleyAnswersFilteredData[0:6, 38], uncannyValleyAnswersFilteredData[0:6, 39]
, uncannyValleyAnswersFilteredData[0:6, 40], uncannyValleyAnswersFilteredData[0:6, 41], uncannyValleyAnswersFilteredData[0:6, 42]
, uncannyValleyAnswersFilteredData[0:6, 43], uncannyValleyAnswersFilteredData[0:6, 44], uncannyValleyAnswersFilteredData[0:6, 45]
, uncannyValleyAnswersFilteredData[0:6, 46], uncannyValleyAnswersFilteredData[0:6, 47], uncannyValleyAnswersFilteredData[0:6, 48])
colnames(uncannyValleyAnswersFilteredData)<-unlist(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
# create data frame
uncannyValleyAnswersFilteredData <- data.frame(  as.numeric(uncannyValleyAnswersFilteredData[0:6, 1]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 2]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 3])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 4]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 5]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 6])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 7]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 8]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 9])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 10]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 11]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 12])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 13]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 14]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 15])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 16]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 17]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 18])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 19]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 20]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 21])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 22]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 23]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 24])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 25]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 26]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 27])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 28]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 29]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 30])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 31]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 32]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 33])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 34]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 35]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 36])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 37]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 38]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 39])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 40]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 41]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 42])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 43]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 44]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 45])
, as.numeric(uncannyValleyAnswersFilteredData[0:6, 46]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 47]), as.numeric(uncannyValleyAnswersFilteredData[0:6, 48]))
View(uncannyValleyAnswersFilteredData)
colnames(uncannyValleyAnswersFilteredData) <- unlist(uncannyValleyAnswersSubsetTrasponiertRenamed[1, ])
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
uncannyValleyAnswersFilteredData$q1_Lloid
#uncannyValleyAnswersFilteredData <- enframe(uncannyValleyAnswersFilteredData)
#print(uncannyValleyAnswersFilteredData)
#length(uncannyValleyAnswersFilteredData[])
#uncannyValleyAnswersFilteredData[c("q1_Lloid")]
#uncannyValleyAnswersFilteredData$q1_Lloid
nrow(uncannyValleyAnswersFilteredData$q1_Lloid)
summary(uncannyValleyAnswersFilteredData$q1_Lloid)
summary(uncannyValleyAnswersFilteredData)
hist(summarisedUncannyValleyAnswersFilteredData)
hist(uncannyValleyAnswersFilteredData)
hist(uncannyValleyAnswersFilteredData$q1_Lloid)
length(uncannyValleyAnswersFilteredData$q1_Lloid)
View(uncannyValleyAnswersRawData)
View(uncannyValleyAnswersFilteredData)
install psych
install.packages("psych")
describe(uncannyValleyAnswersFilteredData)
library(psych)
describe(uncannyValleyAnswersFilteredData)
rug(uncannyValleyAnswersFilteredData$q1_Lloid,col="red")
#hist(uncannyValleyAnswersFilteredData$q1_Lloid,prob=T,main="q1_Lloid")
points(density(uncannyValleyAnswersFilteredData$q1_Lloid),type="l",col="blue")
rug(uncannyValleyAnswersFilteredData$q1_Lloid,col="red")
describe(uncannyValleyAnswersFilteredData)
ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
#{
#print("sub l");
#print(length(myJSON[[i]][j][[k]]));
#for (l in 1:length(myJSON[[i]][j][[k]]))
#{
#print(length(myJSON[[i]][j][[k]][l]));
#if (length(l[[i]][j]) == 1)
#{}
#}
#}
typeConvertedRawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
ConvertTypes <- function(l)
{
for (i in 1:length(l))
{
for (j in 1:length(l[[i]]))
{
if (length(l[[i]][j]) == 1)
{
if (!is.na(as.numeric(l[[i]][j])))
{
l[[i]][j] = as.numeric(l[[i]][j]);
}
if (l[[i]][j] == "True")
{
l[[i]][j] = TRUE;
}
if (l[[i]][j] == "False")
{
l[[i]][j] = FALSE;
}
}
}
}
return(l);
}
{
#print("sub k");
#print(length(myJSON[[i]][j]));
#for (k in 1:length(myJSON[[i]][j]))
#{
#print("sub l");
#print(length(myJSON[[i]][j][[k]]));
#for (l in 1:length(myJSON[[i]][j][[k]]))
#{
#print(length(myJSON[[i]][j][[k]][l]));
#if (length(l[[i]][j]) == 1)
#{}
#}
#}
typeConvertedRawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
}
library(jsonlite)
return(typeConvertedRawTrackingData);
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
typeConvertedRawTrackingData <- ImportTrackingData('C:\My_JSON_Data\7-26_10-39-55.json')
typeConvertedRawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
source("~/GitHub/VRSTK/RTools/ConvertType.R")
source("~/GitHub/VRSTK/RTools/ImportQuestionnaireCsv.R")
source("~/GitHub/VRSTK/RTools/CreateDescreptiveStatisticOfQuestionnaireAnswers.R")
source("~/GitHub/VRSTK/RTools/CreateDescreptiveStatisticOfQuestionnaireAnswers.R")
clr
cls
ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
debugSource("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
debugSource("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
rawTrackingData <- fromJSON(filePath);
rawTrackingData <- fromJSON(filePath);
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
for (i in 1:length(myJSON))
debugSource("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
debugSource("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
debugSource("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
{
rawTrackingData[[i]][j] = ConvertTypes(rawTrackingData[[i]][j]);
}
uncannyValleyAnswersRawData
uncannyValleyAnswersRawData <- ImportUncannyValleyAnswers()
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
source("~/GitHub/VRSTK/RTools/CreateDescreptiveStatisticOfQuestionnaireAnswers.R")
describe(uncannyValleyAnswersFilteredData)
library(psych)
View(uncannyValleyAnswersFilteredData)
describe(uncannyValleyAnswersFilteredData)
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R", encoding = 'UTF-8')
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/7-26_10-39-55.json')
source("~/GitHub/VRSTK/RTools/ImportTrackingData.R")
View(rawTrackingData)
source("~/GitHub/VRSTK/RTools/BitalinoDataFromRawTrackingData.R")
#eyeHitPoints = testData$Stage0$EyeLookAtObject$EyeHitPoint;
#require(MASS)
#unlisted <- matrix(unlist(eyeHitPoints), ncol = 3, byrow = TRUE);
#dens <- kde2d(unlisted[,1], unlisted[,3], n=100);
#filled.contour(dens)
#pointsMatrix = data.matrix(dataPoints);
}
#eyeHitPoints = testData$Stage0$EyeLookAtObject$EyeHitPoint;
#require(MASS)
#unlisted <- matrix(unlist(eyeHitPoints), ncol = 3, byrow = TRUE);
#dens <- kde2d(unlisted[,1], unlisted[,3], n=100);
#filled.contour(dens)
#pointsMatrix = data.matrix(dataPoints);
return();
#rawBitalinoDataStage0 <- rawTrackingData$Stage0$`BItalinoTracker-3942`$`_rawReceivedMessage_TrackingBitalinoWithOSC`;
#eyeHitPoints = testData$Stage0$EyeLookAtObject$EyeHitPoint;
#require(MASS)
#unlisted <- matrix(unlist(eyeHitPoints), ncol = 3, byrow = TRUE);
#dens <- kde2d(unlisted[,1], unlisted[,3], n=100);
#filled.contour(dens)
#pointsMatrix = data.matrix(dataPoints);
}
rawBitalinoDataStage0 <- rawTrackingData$Stage0$`BItalinoTracker-3942`$`_rawReceivedMessage_TrackingBitalinoWithOSC`;
View(BitalinoDataFromRawTrackingData)
View(rawTrackingData)
#eyeHitPoints = testData$Stage0$EyeLookAtObject$EyeHitPoint;
#require(MASS)
#unlisted <- matrix(unlist(eyeHitPoints), ncol = 3, byrow = TRUE);
#dens <- kde2d(unlisted[,1], unlisted[,3], n=100);
#filled.contour(dens)
#pointsMatrix = data.matrix(dataPoints);
}
rawTrackingData[["Stage0"]][["BItalinoTracker-3942"]][["_transferedReceivedMessage_TrackingBitalinoWithOSC"]]
#eyeHitPoints = testData$Stage0$EyeLookAtObject$EyeHitPoint;
#require(MASS)
#unlisted <- matrix(unlist(eyeHitPoints), ncol = 3, byrow = TRUE);
#dens <- kde2d(unlisted[,1], unlisted[,3], n=100);
#filled.contour(dens)
#pointsMatrix = data.matrix(dataPoints);
}
rawBitalinoDataStage0 <- rawTrackingData$Stage0$`BItalinoTracker-3942`;
View(rawBitalinoDataStage0)
#eyeHitPoints = testData$Stage0$EyeLookAtObject$EyeHitPoint;
#require(MASS)
#unlisted <- matrix(unlist(eyeHitPoints), ncol = 3, byrow = TRUE);
#dens <- kde2d(unlisted[,1], unlisted[,3], n=100);
#filled.contour(dens)
#pointsMatrix = data.matrix(dataPoints);
return(rawBitalinoDataStage0, rawBitalinoDataStage1, rawBitalinoDataStage2)
return("")
return("");
BitalinoDataFromRawTrackingData <- function ()
{
rawBitalinoDataStage0 <- rawTrackingData$Stage0$`BItalinoTracker-3942`;
rawBitalinoDataStage1 <- rawTrackingData$Stage1$`BItalinoTracker-3942`;
rawBitalinoDataStage2 <- rawTrackingData$Stage2$`BItalinoTracker-3942`;
return("");
}
rawBitalinoDataStage2 <- rawTrackingData$Stage2$`BItalinoTracker-3942`;
#rawBitalinoDataStage0 <- rawTrackingData$Stage0$`BItalinoTracker-3942`;
rawBitalinoDataStage1 <- rawTrackingData$Stage1$`BItalinoTracker-3942`;
View(rawBitalinoDataStage2)
View(rawBitalinoDataStage1)
View(rawTrackingData)
rawFixationSaccadesPositionsDataStage0 <- rawTrackingData[["Stage0"]][["CameraTracking25304"]];
View(rawFixationSaccadesPositionsDataStage0)
rawFixationSaccadesPositionsDataStage1 <- rawTrackingData[["Stage1"]][["CameraTracking25304"]];
rawFixationSaccadesPositionsDataStage2 <- rawTrackingData[["Stage2"]][["CameraTracking25304"]];
View(rawFixationSaccadesPositionsDataStage2)
View(rawBitalinoDataStage1)
View(rawTrackingData)
rawPagesDataStage1 <- rawTrackingData[["Stage1"]][["Pages53322"]];
View(rawPagesDataStage1)
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/EEGundBitalinoStage08-4_13-24-22.json')
library(psych)
rawTrackingData <- ImportTrackingData('C:/My_JSON_Data/EEGundBitalinoStage08-4_13-24-22.json')
View(rawTrackingData)
rawEmotivTrackingDataStage0 <- rawTrackingData[["Stage0"]][["EmotivBrainComputerInterfaceTracker41012"]];
View(rawEmotivTrackingDataStage0)
